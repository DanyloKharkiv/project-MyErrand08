{"version":3,"file":"static/js/10.3d23914f.chunk.js","mappings":"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","sources":["components/Header/UserInfo/UserInfo.Styled.js","components/Modals/EditProfile/EditProfile.Styled.js","components/Modals/EditProfile/EditProfile.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.Styled.js","components/Header/ThemeSelect/ThemeSelect.Styled.js","components/Header/ThemeSelect/ThemeSelect.jsx","components/BurgerMenu/BurgerMenu.Styled.js","components/BurgerMenu/BurgerMenu.jsx","components/Header/Header.jsx","components/Sidebar/Logo/Logo.Styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/CreateBoard/CreateBoard.Styled.js","webpack://project-myerrand08/./src/components/Modals/NewBoard/css.module.css?950a","components/Modals/NewBoard/NewBoard.jsx","components/Modals/NewBoard/NewBoardModal.js","components/Sidebar/CreateBoard/CreateBoard.jsx","components/Sidebar/Boards/Boards.Styled.js","components/Modals/EditDeskModal/EditBoard.jsx","components/Modals/EditDeskModal/EditBoardModal.js","components/Sidebar/Boards/BoardListItem.jsx","components/Sidebar/Boards/BoardList.jsx","components/Sidebar/Boards/Boards.jsx","components/Sidebar/CustomerSupport/CustomerSupport.Styled.js","components/Modals/NeedHelp/NeedHelp.Styled.js","components/Modals/NeedHelp/NeedHelp.jsx","components/Modals/NeedHelp/NeedHelpModal.jsx","components/Sidebar/CustomerSupport/CustomerSupport.jsx","components/Sidebar/LogOut/LogOut.Styled.js","components/Sidebar/LogOut/LogOut.jsx","components/Sidebar/SideBar.Styled.js","components/Sidebar/Sidebar.jsx","page/HomePage/HomePage.Styled.js","page/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Text = styled.span`\r\n  margin-right: 8px;\r\n  font-size: 14px;\r\n`;\r\nexport const UserInfoBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 8px;\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n  font-family: var(--poppinsFont);\r\n  font-weight: var(--fontWeight500);\r\n  font-size: var(--fontSize14);\r\n  margin-left: 14px;\r\n  cursor: pointer;\r\n  color: var(--userNameColor);\r\n  &:hover {\r\n    color: var(--accentColor);\r\n  }\r\n`;\r\n\r\nexport const UserAvatarBox = styled.div`\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  height: 32px;\r\n  width: 32px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserAvatar = styled.img`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const EditProfileForm = styled.form`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  padding: 24px;\r\n  height: 440px;\r\n  border-width: 1px;\r\n  border-color: #bedbb080;\r\n  border-style: solid;\r\n  border-radius: 8px;\r\n  background-color: var(--modalBg);\r\n  z-index: 1;\r\n  box-shadow: 0px 4px 16px 0px #1616160d;\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 335px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 400px;\r\n  }\r\n`;\r\n\r\nexport const EditProfileTitle = styled.h2`\r\n  color: var(--modalTitle);\r\n  font-size: 18px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const EditProfileImg = styled.img`\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const EditProfileSvg = styled.svg`\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const FileWrapper = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 130px;\r\n  transform: translate(-50%, 0);\r\n  background-color: var(--modalEditPlusFoto);\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const Foto = styled.input`\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: #bedbb0;\r\n  border-style: none;\r\n  border-radius: 8px;\r\n  opacity: 0;\r\n`;\r\n\r\n\r\nexport const EditFoto = styled.svg`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const EditCloseBtn = styled.button`\r\n  position: absolute;\r\n  right: 14px;\r\n  top: 14px;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-style: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const EditProfileInput = styled.input`\r\n  padding: 14px 18px;\r\n  margin-bottom: 14px;\r\n  width: 100%;\r\n  height: 49px;\r\n  border: 1px solid var(--modalInputBorder);\r\n  border-radius: 8px;\r\n  background-color: var(--modalInputBg);\r\n  color: var(--modalInputTxt);\r\n  font-family: var(--poppinsFont);\r\n  font-size: var(--fontSize14);\r\n\r\n  outline: none;\r\n\r\n  &::placeholder {\r\n    font-size: var(--fontSize14);\r\n  }\r\n`;\r\n\r\nexport const PasswordWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ToggleShowPasword = styled.span`\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const BtnEditProfile = styled.button`\r\n  width: 100%;\r\n  height: 49px;\r\n  margin-top: 10px;\r\n  margin-bottom: 24px;\r\n  background-color: var(--modalAccentBtnBg);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  color: var(--modalAccentBtnTxt);\r\n  font-family: var(--poppinsFont);\r\n  font-weight: var(--fontWeight500);\r\n  border: none;\r\n  transition: var(--transition);\r\n\r\n  &:hover {\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\r\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getAvatar, getName, getUserEmail } from '../../../redux/auth/authSelector';\r\n\r\nimport {\r\n  EditProfileForm,\r\n  EditProfileInput,\r\n  BtnEditProfile,\r\n  EditProfileTitle,\r\n  EditProfileImg,\r\n  EditCloseBtn,\r\n  ToggleShowPasword,\r\n  PasswordWrapper,\r\n  Foto,\r\n  EditFoto,\r\n  FileWrapper,\r\n  EditProfileSvg,\r\n} from './EditProfile.Styled';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { useState } from 'react';\r\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\r\nimport axios from 'axios';\r\nimport { Notify } from 'notiflix';\r\nimport { updateAvatar, updateEmail, updateName } from '../../../redux/auth/authOperation';\r\n\r\nconst EditProfile = ({ modalClose }) => {\r\n  const userAvatar = useSelector(getAvatar);\r\n  const userName = useSelector(getName);\r\n  const userEmail = useSelector(getUserEmail);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(prevShowPassword => !prevShowPassword);\r\n  };\r\n\r\n  const handleAvatarChange = async e => {\r\n    const formData = new FormData();\r\n    formData.append('avatar', e.target.files[0]);\r\n    await dispatch(updateAvatar(formData));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.name.value.trim()) {\r\n      try {\r\n        await dispatch(updateName(e.target.name.value.trim()));\r\n        Notify.success('Name changed');\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    if (e.target.email.value.trim()) {\r\n      try {\r\n        await dispatch(updateEmail(e.target.email.value.trim()));\r\n        Notify.success('Email changed');\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    if (e.target.password.value.trim()) {\r\n      try {\r\n        const { data } = await axios.patch('/users/password', {\r\n          password: e.target.password.value.trim(),\r\n        });\r\n        Notify.success(data.message);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    modalClose();\r\n  };\r\n\r\n  return (\r\n    <EditProfileForm onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n      <EditProfileTitle>Edit profile</EditProfileTitle>\r\n      <EditCloseBtn\r\n        type=\"button\"\r\n        onClick={() => {\r\n          modalClose();\r\n        }}\r\n      >\r\n        <svg width=\"18\" height=\"18\" stroke=\"var(--modalCloseIcon)\">\r\n          <use href={sprite + '#icon-x'}></use>\r\n        </svg>\r\n      </EditCloseBtn>\r\n      {!userAvatar && (\r\n        <EditProfileSvg width=\"68\" height=\"68\">\r\n          <use href={sprite + `#icon-user`}></use>\r\n        </EditProfileSvg>\r\n      )}\r\n      {userAvatar && <EditProfileImg src={userAvatar} alt=\"user_icon\" width={68} height={68} />}\r\n      <FileWrapper>\r\n        <Foto type=\"file\" accept=\"image/*,.png,.jpg,.gif,.web\" onChange={handleAvatarChange}></Foto>\r\n        <EditFoto width=\"10\" height=\"10\" stroke=\"black\">\r\n          <use href={sprite + '#icon-plus'}></use>\r\n        </EditFoto>\r\n      </FileWrapper>\r\n      <EditProfileInput type=\"text\" name=\"name\" placeholder={userName}></EditProfileInput>\r\n      <EditProfileInput type=\"email\" name=\"email\" placeholder={userEmail}></EditProfileInput>\r\n      {/* pattern=\"/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\" */}\r\n      <PasswordWrapper>\r\n        <EditProfileInput\r\n          type={showPassword ? 'text' : 'password'}\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          minLength=\"8\"\r\n          maxLength=\"64\"\r\n        ></EditProfileInput>\r\n        <ToggleShowPasword onClick={togglePasswordVisibility}>\r\n          {showPassword ? (\r\n            <BsEyeSlash color=\"var(--modalSmallTitle)\" style={{ width: 18, height: 18 }} />\r\n          ) : (\r\n            <BsEye color=\"var(--modalSmallTitle)\" style={{ width: 18, height: 18 }} />\r\n          )}\r\n        </ToggleShowPasword>\r\n      </PasswordWrapper>\r\n      <BtnEditProfile type=\"submit\">Send</BtnEditProfile>\r\n    </EditProfileForm>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import { UserInfoBox, UserName, UserAvatar, UserAvatarBox } from './UserInfo.Styled';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { useSelector } from 'react-redux';\r\nimport { getName, getAvatar } from '../../../redux/auth/authSelector';\r\n\r\nimport { useState } from 'react';\r\nimport EditProfile from '../../Modals/EditProfile/EditProfile';\r\n\r\nexport const UserInfo = () => {\r\n  const userName = useSelector(getName);\r\n  const userAvatar = useSelector(getAvatar);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const modalClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const modalOpen = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserInfoBox>\r\n        <UserName>{userName}</UserName>\r\n        {!userAvatar && (\r\n          <UserAvatarBox>\r\n            <svg width=\"32\" height=\"32\" onClick={modalOpen}>\r\n              <use href={sprite + `#icon-user`}></use>\r\n            </svg>\r\n          </UserAvatarBox>\r\n        )}\r\n        {userAvatar && (\r\n          <UserAvatarBox src={userAvatar} alt=\"user_icon\">\r\n            <UserAvatar src={userAvatar} alt=\"user_icon\" onClick={modalOpen}></UserAvatar>\r\n          </UserAvatarBox>\r\n        )}\r\n      </UserInfoBox>\r\n      {isModalOpen && <EditProfile modalClose={modalClose} />}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserSection = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nexport const HeaderSection = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 18px 24px 18px 24px;\r\n  /* border: 1px solid red; */\r\n  /* max-width: 100%; */\r\n  /* height: 68px; */\r\n  background-color: var(--headerColor);\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin-right: 14px;\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-size: var(--fontSize14);\r\n  font-family: var(--poppinsFont);\r\n  font-weight: var(--fontWeight500);\r\n  letter-spacing: -0.28px;\r\n  color: var(--themeTitle);\r\n  cursor: pointer;\r\n  :hover {\r\n    color: var(--accentColor);\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  position: absolute;\r\n  opacity: ${(props) => (props.isOpen ? '1' : '0')};\r\n  transform: translateY(${(props) => (props.isOpen ? '0' : '-10px')});\r\n  transition: opacity 0.2s, transform 0.3s;\r\n  pointer-events: ${(props) => (props.isOpen ? 'visible' : 'none')};\r\n\r\n  display: flex;\r\n  padding: 18px 44px 18px 18px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: var(--borderRadius8);\r\n  background-color: var(--themeBgColor);\r\n  box-shadow: 0px 4px 16px 0px var(--themeBoxShadow);\r\n\r\n  gap: 8px;\r\n  top: 19px;\r\n  left: 0px;\r\n  z-index: 999;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  cursor: pointer;\r\n  color: var(--themeItem);\r\n  transition: color 0.4s;\r\n  :hover {\r\n    color: var(--accentColor);\r\n  }\r\n`;","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTheme } from \"../../../redux/theme/themeSlice\";\r\nimport { updateTheme } from \"../../../redux/auth/authOperation\";\r\nimport { Container, Title, Wrapper, List, Item } from \"./ThemeSelect.Styled\";\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\nimport { selectGetTheme } from \"../../../redux/auth/authSelector\";\r\n\r\nconst themes = [\r\n  { name: \"Light\", value: \"light\" },\r\n  { name: \"Dark\", value: \"dark\" },\r\n  { name: \"Violet\", value: \"violet\" },\r\n];\r\n\r\nexport const ThemeSelect = () => {\r\n  const dispatch = useDispatch();\r\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\r\n  const [selectedTheme, setSelectedTheme] = useState(\"dark\");\r\n  const localTheme = useSelector(selectGetTheme);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.remove(\"light-theme\", \"dark-theme\", \"violet-theme\");\r\n    document.body.classList.add(selectedTheme + \"-theme\");\r\n  }, [selectedTheme]);\r\n\r\n  const handleThemeToggle = (theme) => {\r\n    dispatch(setTheme(theme));\r\n    dispatch(updateTheme(theme));\r\n    setTimeout(() => {\r\n      setSelectedTheme(theme);\r\n    }, 10);\r\n    setIsSelectOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!localTheme) {\r\n      return;\r\n    }\r\n\r\n    setSelectedTheme(localTheme);\r\n  }, [localTheme]);\r\n\r\n  return (\r\n    <Container isOpen={isSelectOpen}>\r\n      <Wrapper onClick={() => setIsSelectOpen(!isSelectOpen)}>\r\n        <Title>Theme</Title>\r\n        <IoIosArrowDown size={16} color=\"var(--themeTitle)\" />\r\n      </Wrapper>\r\n      <List isOpen={isSelectOpen}>\r\n        {themes.map(({ value, name }) => (\r\n          <Item key={value} onClick={() => handleThemeToggle(value)}>\r\n            {name}\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: var(--accentColor);\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const Svg = styled.svg`\r\n  stroke: var(--userNameColor);\r\n\r\n  &:hover {\r\n    stroke: var(--accentColor);\r\n  }\r\n`;","import url from '../../images/sprite.svg';\r\nimport { Button, Svg } from './BurgerMenu.Styled';\r\n\r\nconst BurgerMenu = ({ openSideBar }) => {\r\n  return (\r\n      <div>\r\n      <Button onClick={openSideBar}>\r\n        <Svg width={24} height={24}>\r\n          <use xlinkHref={`${url}#icon-menu-01`} />\r\n        </Svg>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;","import { UserInfo } from \"./UserInfo/UserInfo\";\r\nimport { HeaderSection, UserSection } from \"./Header.Styled\";\r\nimport { ThemeSelect } from \"./ThemeSelect/ThemeSelect\";\r\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\r\n\r\nexport const Header = ({ openSideBar }) => {\r\n  return (\r\n    <HeaderSection>\r\n      <BurgerMenu openSideBar={openSideBar} />\r\n      <UserSection>\r\n        <ThemeSelect />\r\n        <UserInfo />\r\n      </UserSection>\r\n    </HeaderSection>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LogoElement = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-top: 24px;\r\n  margin-left: 24px;\r\n  margin-bottom: 60px;\r\n  /* border: 1px solid white; */\r\n  width: 109px;\r\n  height: 32px;\r\n`;\r\n\r\nexport const LogoTitle = styled.h1`\r\n  color: var(--contrastColor);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: 24px;\r\n  letter-spacing: -4%;\r\n  /* text-align: center; */\r\n`;\r\n\r\nexport const LogoSVG = styled.svg`\r\npath {\r\n  fill: var(--logo); \r\n}\r\n`\r\n","import { LogoElement, LogoTitle } from \"./Logo.Styled\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\n\r\nexport const Logo = () => {\r\n  return (\r\n    <LogoElement>\r\n      <svg width=\"32\" height=\"32\" >\r\n        <use href={sprite + `#icon-icon-logo`}></use>\r\n      </svg>\r\n      <LogoTitle>Task Pro</LogoTitle>\r\n    </LogoElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const CreateBoardBtnElement = styled.div`\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n  padding-top: 14px;\r\n  padding-bottom: 14px;\r\n  border-top: 1px solid var(--boarder);\r\n  border-bottom: 1px solid var(--boarder);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  // height: 70px; \r\n  font-weight: var(--fontWeight500);\r\n`;\r\n\r\nexport const CreateBoardBtnText = styled.p`\r\n  /* margin-top: 14px;\r\n  margin-bottom: 14px; */\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  /* margin-top: 19px;\r\n  margin-bottom: 15px; */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 36px;\r\n  background-color: var(--plusBg);\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"css_modal__WMGVV\",\"title\":\"css_title__7BlP3\",\"inputText\":\"css_inputText__xY+ax\",\"iconsTitle\":\"css_iconsTitle__Jlj-3\",\"inputList\":\"css_inputList__BpQcQ\",\"realRadio\":\"css_realRadio__QtrhA\",\"backgroundList\":\"css_backgroundList__aINfi\",\"backgroundItem\":\"css_backgroundItem__qvPfY\",\"btn\":\"css_btn__2U0Ik\",\"svgOff\":\"css_svgOff__8soTQ\",\"svgOn\":\"css_svgOn__qpAFv\",\"imgOn\":\"css_imgOn__NjenK\",\"imgOff\":\"css_imgOff__dKoLi\",\"backgroundListItem\":\"css_backgroundListItem__l0eq1\",\"closeBtn\":\"css_closeBtn__+E8xA\",\"div\":\"css_div__t-Gv4\",\"span\":\"css_span__wW9em\"};","import css from '../NewBoard/css.module.css'\r\nimport sprite from '../../../images/sprite.svg'\r\nimport { useState } from 'react'\r\nimport backimg from '../../../json/icon.json';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addDesk } from '../../../redux/desk/deskOperations';\r\nimport { getUserId } from '../../../redux/auth/authSelector';\r\n\r\n\r\nconst NewBoard = ({ close }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [title, setTitle] = useState('')\r\n    const [icons, setIcons] = useState('icon_1');\r\n    const [backImg, setBackImg] = useState('id-0');\r\n\r\n    const ownerUser = useSelector(getUserId);\r\n\r\n    const handleClose = () => {\r\n        close()\r\n    }\r\n    const onFormChange = e => {\r\n    const { name, value, id } = e.target;\r\n    switch (name) {\r\n      case 'title':\r\n        setTitle(value);\r\n        break;\r\n      case 'icons':\r\n        setIcons(id);\r\n            break;\r\n      case 'backgrounds':\r\n        setBackImg(id);\r\n        break;\r\n      default:\r\n        throw new Error('There has been a mistake. Try again, please.');\r\n    }\r\n    };\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        const newDesk = { title: title, ownerUser:ownerUser, icon:icons, background: backImg };\r\n        dispatch(addDesk(newDesk));\r\n\r\n        setTitle('');\r\n        setIcons('');\r\n        setBackImg('id-0');\r\n        close()\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className={css.modal}>\r\n            <svg onClick={handleClose} className={css.closeBtn} width=\"18\" height=\"18\">\r\n        <use  href = {sprite + '#icon-x'}></use>\r\n        </svg>\r\n            <h3 className={css.title}>New Board</h3>\r\n            <form onSubmit={onFormSubmit}>\r\n                <input onChange={onFormChange} className={css.inputText} value={title} type=\"text\" name=\"title\" id=\"title\" placeholder='Title' />\r\n                <h3 className={css.iconsTitle}>Icons</h3>\r\n                <ul className={css.inputList}>\r\n                    \r\n                    <li>\r\n                        <label htmlFor=\"icon_1\">\r\n                    <svg className={(icons==='icon_1')?css.svgOn:css.svgOff} width='18' height='18' fill=\"none\" stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_1'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_1\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_2\">\r\n                    <svg className={(icons==='icon_2')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_2'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_2\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_3\">\r\n                    <svg className={(icons==='icon_3')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_3'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_3\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_4\">\r\n                    <svg className={(icons==='icon_4')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_4'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_4\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_5\">\r\n                    <svg className={(icons==='icon_5')?css.svgOn:css.svgOff} width='18' height='18'  stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_5'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_5\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_6\">\r\n                    <svg className={(icons==='icon_6')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\r\n                        <use href={sprite + '#icon_6'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_6\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_7\">\r\n                    <svg className={(icons==='icon_7')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\r\n                        <use href={sprite + '#icon_7'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_7\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_8\">\r\n                    <svg className={(icons==='icon_8')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\r\n                        <use href={sprite + '#icon_8'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_8\" />\r\n                </label>\r\n                    </li>\r\n                </ul>\r\n                <h3 className={css.iconsTitle}>Background</h3>\r\n                <ul className={css.backgroundList}>\r\n                    {backimg.map(({url,id})=>(<li className={css.backgroundListItem} key={id}>\r\n                        <label htmlFor={id}>\r\n                    <img className={(backImg===`${id}`)?css.imgOn:css.imgOff} src={url} alt='img' width='28'></img>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name='backgrounds' id={id} />\r\n                        </label>\r\n                    </li>))}\r\n                </ul>\r\n                <button className={css.btn}>\r\n                    <div  className={css.div}>\r\n                    <div  className={css.span}>\r\n                        <svg width=\"20\" height=\"20\" stroke=\"var(--addBtnText)\">\r\n                  <use href={sprite + `#icon-plus`}></use>\r\n                </svg>\r\n                </div>\r\n                    Create\r\n                    </div>\r\n                    </button>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBoard;\r\n\r\n","import { useImperativeHandle, useState, forwardRef } from \"react\";\r\nimport Modal from \"../Modal\"\r\nimport NewBoard from \"./NewBoard\";\r\nconst NewBoardModal = (_,ref) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n    setShowModal(false);\r\n    }\r\n    useImperativeHandle(ref, () => ({ openModal }));\r\n    return (\r\n        <>\r\n            {showModal&&<Modal close={closeModal}>\r\n                <NewBoard close={closeModal} />\r\n\r\n                </Modal>}\r\n        </>\r\n    )\r\n}\r\nexport default forwardRef(NewBoardModal);","import {\r\n  CreateBoardBtnElement,\r\n  CreateBoardBtnText,\r\n  Btn,\r\n} from \"./CreateBoard.Styled\";\r\nimport NewBoardModal from \"../../Modals/NewBoard/NewBoardModal\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const CreateBoardBtn = () => {\r\n\r\n  const newBoardModalRef = useRef(null);\r\n  \r\n  const openNewBoardModal = () => {\r\n    if (newBoardModalRef.current) {\r\n      newBoardModalRef.current.openModal()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CreateBoardBtnElement>\r\n      <CreateBoardBtnText>\r\n        Create a <br />\r\n        new board\r\n      </CreateBoardBtnText>\r\n      <Btn onClick={openNewBoardModal}>\r\n        <svg width=\"20\" height=\"20\" stroke=\"black\">\r\n          <use href={sprite + `#icon-plus`}></use>\r\n        </svg>\r\n      </Btn>\r\n      <NewBoardModal ref={newBoardModalRef} />\r\n    </CreateBoardBtnElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const BoardsElement = styled.div`\r\n  /* padding-top: 24px; */\r\n  padding-right: 0px;\r\n  // padding-bottom: 40px;\r\n`;\r\n\r\nexport const BoardsTitle = styled.h2`\r\n  padding-left: 24px;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  opacity: 0.5;\r\n  margin-bottom: 8px;\r\n  color: var(--myBoards);\r\n`;\r\n\r\nexport const BoardsList = styled.ul`\r\n  height: calc(100vh - 600px);\r\n  margin-top: 4px;\r\n  /* border: 1px solid var(--boarder); */\r\n  padding-top: 40px;\r\n  padding-bottom: 40px;\r\n  /* height: 206px; */\r\n  /* overflow-block: scroll; */\r\n  overflow-y: auto;\r\n  @media screen and (max-width: 1440px) {\r\n    height: calc(100vh - 680px);\r\n    /* height: 138px; */\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n  }\r\n`;\r\n\r\nexport const BoardsItem = styled.li`\r\n  display: flex;\r\n  height: 61px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: var(--contrastColor);\r\n\r\n  padding: 20px 24px 20px 24px;\r\n\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    background-color: var(--prOfBg);\r\n  }\r\n\r\n  &:active {\r\n    background-color: var(--prOfBg);\r\n  }\r\n\r\n  background-color: ${({ isSelected }) =>\r\n    isSelected ? \"var(--prOfBg)\" : \"transparent\"};\r\n\r\n  border-right: ${({ isSelected }) =>\r\n    isSelected ? \"4px solid var(--activeBorder)\" : \"none\"};\r\n`;\r\n\r\nexport const ProjectsBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ProjectSVG = styled.svg`\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const BtnsSVGBox = styled.div`\r\n  display: flex;\r\n  display: ${({ isSelected }) => (isSelected ? \"block\" : \"none\")};\r\n`;\r\n\r\nexport const BtnsSVG = styled.button`\r\n  margin-left: 8px;\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 0;\r\n  cursor: pointer;\r\n`;\r\n","import css from '../NewBoard/css.module.css';\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { useState } from 'react';\r\nimport backimg from '../../../json/icon.json';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeDeskNameById,\r\n  changeDeskIconById,\r\n  changeDeskBGById,\r\n} from '../../../redux/desk/deskOperations';\r\n\r\nimport { selectChangeDeskId, selectChangeDeskTitle } from '../../../redux/desk/deskSelectors';\r\n\r\nconst EditBoard = ({ close }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const deskId = useSelector(selectChangeDeskId);\r\n  const oldDeskTitle = useSelector(selectChangeDeskTitle);\r\n\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [icons, setIcons] = useState('');\r\n  const [backImg, setBackImg] = useState('');\r\n\r\n  const handleClose = () => {\r\n    close();\r\n  };\r\n  const onFormChange = e => {\r\n    const { name, value, id } = e.target;\r\n\r\n    switch (name) {\r\n      case 'title':\r\n        setTitle(value);\r\n        break;\r\n      case 'icons':\r\n        setIcons(id);\r\n        break;\r\n      case 'backgrounds':\r\n        setBackImg(id);\r\n        break;\r\n      default:\r\n        throw new Error('There has been a mistake. Try again, please.');\r\n    }\r\n  };\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (title !== '') {\r\n      const newTitle = { _id: deskId, title: title };\r\n      dispatch(changeDeskNameById(newTitle));\r\n    }\r\n\r\n    if (icons !== '') {\r\n      const newIcon = { _id: deskId, icon: icons };\r\n      dispatch(changeDeskIconById(newIcon));\r\n    }\r\n\r\n    if (backImg !== '') {\r\n      const newbackImg = { _id: deskId, background: backImg };\r\n      dispatch(changeDeskBGById(newbackImg));\r\n    }\r\n\r\n    setTitle('');\r\n    setIcons('');\r\n    setBackImg('');\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <div className={css.modal}>\r\n      <svg onClick={handleClose} className={css.closeBtn} width=\"18\" height=\"18\">\r\n        <use href={sprite + '#icon-x'}></use>\r\n      </svg>\r\n      <h3 className={css.title}>Enter a new board name:</h3>\r\n      <form onSubmit={onFormSubmit}>\r\n        <input\r\n          onChange={onFormChange}\r\n          className={css.inputText}\r\n          value={title}\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"title\"\r\n          placeholder={oldDeskTitle}\r\n        />\r\n        <h3 className={css.iconsTitle}>Choose an icon:</h3>\r\n        <ul className={css.inputList}>\r\n          <li>\r\n            <label htmlFor=\"icon_1\">\r\n              <svg\r\n                className={icons === 'icon_1' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                fill=\"none\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_1'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_1\"\r\n              />\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"icon_2\">\r\n              <svg\r\n                className={icons === 'icon_2' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_2'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_2\"\r\n              />\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"icon_3\">\r\n              <svg\r\n                className={icons === 'icon_3' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_3'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_3\"\r\n              />\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"icon_4\">\r\n              <svg\r\n                className={icons === 'icon_4' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_4'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_4\"\r\n              />\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"icon_5\">\r\n              <svg\r\n                className={icons === 'icon_5' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_5'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_5\"\r\n              />\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"icon_6\">\r\n              <svg\r\n                className={icons === 'icon_6' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_6'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_6\"\r\n              />\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"icon_7\">\r\n              <svg\r\n                className={icons === 'icon_7' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_7'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_7\"\r\n              />\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"icon_8\">\r\n              <svg\r\n                className={icons === 'icon_8' ? css.svgOn : css.svgOff}\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--filterModalText)\"\r\n              >\r\n                <use href={sprite + '#icon_8'}></use>\r\n              </svg>\r\n              <input\r\n                onChange={onFormChange}\r\n                className={css.realRadio}\r\n                type=\"radio\"\r\n                name=\"icons\"\r\n                id=\"icon_8\"\r\n              />\r\n            </label>\r\n          </li>\r\n        </ul>\r\n        <h3 className={css.iconsTitle}>Choose a background:</h3>\r\n        <ul className={css.backgroundList}>\r\n          {backimg.map(({ url, id }) => (\r\n            <li className={css.backgroundListItem} key={id}>\r\n              <label htmlFor={id}>\r\n                <img\r\n                  className={backImg === `${id}` ? css.imgOn : css.imgOff}\r\n                  src={url}\r\n                  alt=\"img\"\r\n                  width=\"28\"\r\n                ></img>\r\n                <input\r\n                  onChange={onFormChange}\r\n                  className={css.realRadio}\r\n                  type=\"radio\"\r\n                  name=\"backgrounds\"\r\n                  id={id}\r\n                />\r\n              </label>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button className={css.btn}>\r\n        <div  className={css.div}>\r\n                    <div  className={css.span}>\r\n                        <svg width=\"20\" height=\"20\" stroke=\"var(--addBtnText)\">\r\n                  <use href={sprite + `#icon-plus`}></use>\r\n                </svg>\r\n                </div>\r\n          Edit\r\n          </div>\r\n          </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBoard;\r\n","import { useImperativeHandle, useState, forwardRef } from 'react';\r\nimport Modal from '../Modal';\r\n\r\nimport EditBoard from './EditBoard';\r\nconst EditBoardModal = (_id, ref) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  useImperativeHandle(ref, () => ({ openModal }));\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal close={closeModal}>\r\n          <EditBoard close={closeModal} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default forwardRef(EditBoardModal);\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeActiveDeskById,\r\n  deleteDesk,\r\n  setActiveDeskId,\r\n} from \"../../../redux/desk/deskOperations\";\r\nimport {\r\n  BoardsItem,\r\n  BtnsSVG,\r\n  BtnsSVGBox,\r\n  ProjectSVG,\r\n  ProjectsBox,\r\n} from \"./Boards.Styled\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\n\r\nimport { useRef } from \"react\";\r\nimport EditBoardModal from \"../../Modals/EditDeskModal/EditBoardModal\";\r\n// import { useSelect } from '@mui/base';\r\nimport { selectActiveDeskId } from \"../../../redux/desk/deskSelectors\";\r\n\r\nexport const DesksListItem = ({ _id, icon, title, background }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteDesk = (deskId) => {\r\n    dispatch(deleteDesk(deskId));\r\n  };\r\n\r\n  const handleClickActiveDeskId = (deskId) => {\r\n    dispatch(setActiveDeskId(deskId));\r\n  };\r\n\r\n  const handleClickChangeDeskById = (_id, title, icon, background) => {\r\n    dispatch(changeActiveDeskById({ _id, title, icon, background }));\r\n  };\r\n\r\n  const EditBoardModalRef = useRef(null);\r\n\r\n  const openEditBoardModal = () => {\r\n    if (EditBoardModalRef.current) {\r\n      EditBoardModalRef.current.openModal();\r\n    }\r\n  };\r\n\r\n  const activeDeskId = useSelector(selectActiveDeskId);\r\n\r\n  return (\r\n    <BoardsItem\r\n      isSelected={activeDeskId === _id}\r\n      key={_id}\r\n      onClick={() => handleClickActiveDeskId(_id)}\r\n    >\r\n      <ProjectsBox>\r\n        <ProjectSVG width=\"18\" height=\"18\" stroke=\"var(--contrastColor)\">\r\n          <use href={sprite + `#${icon}`}></use>\r\n        </ProjectSVG>\r\n        <span>{title}</span>\r\n      </ProjectsBox>\r\n      <BtnsSVGBox isSelected={activeDeskId === _id}>\r\n        <BtnsSVG isSelected={activeDeskId === _id}>\r\n          <svg\r\n            onClick={() => {\r\n              handleClickChangeDeskById(_id, title, icon, background);\r\n\r\n              openEditBoardModal();\r\n            }}\r\n            width=\"16\"\r\n            height=\"16\"\r\n            stroke=\"var(--myBoards)\"\r\n            fill=\"transparent\"\r\n            // fill=\"var(--sidebarColor)\"\r\n          >\r\n            <use href={sprite + `#icon-Icon-pencil`}></use>\r\n          </svg>\r\n        </BtnsSVG>\r\n        <BtnsSVG isSelected={activeDeskId === _id}>\r\n          <svg\r\n            onClick={() => handleDeleteDesk(_id)}\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"transparent\"\r\n            stroke=\"var(--myBoards)\"\r\n          >\r\n            <use href={sprite + `#icon-trash-04`}></use>\r\n          </svg>\r\n        </BtnsSVG>\r\n      </BtnsSVGBox>\r\n      <EditBoardModal ref={EditBoardModalRef} />\r\n    </BoardsItem>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDesks, selectVisibleDesks } from \"../../../redux/desk/deskSelectors\";\r\nimport { selectBackImg } from \"../../../redux/filter/filterSelectors\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { fetchDesks } from \"../../../redux/desk/deskOperations\";\r\nimport { DesksListItem } from \"./BoardListItem\";\r\nimport { BoardsList } from \"./Boards.Styled\";\r\n\r\n\r\nimport 'overlayscrollbars/overlayscrollbars.css';\r\n//import { useMatchMedia } from \"../../../hooks/use-match-media\";\r\n//import { useScrollbar } from \"../../../hooks/use-scrollbar\";\r\n\r\n\r\nconst DesksList = () => {\r\n    const dispatch = useDispatch();\r\n    const visibleDesks = useSelector(selectVisibleDesks);\r\n    const desks = useSelector(selectDesks);\r\n    const filterValue = useSelector(selectBackImg);\r\n  \r\n    const desksWrapper = useRef(null);\r\n  \r\n    useEffect(() => {\r\n        dispatch(fetchDesks())\r\n    }, [dispatch]);\r\n  \r\n  \r\n    // const { isMobile } = useMatchMedia();\r\n    // const hasScroll = !isMobile && visibleDesks.length > 2;\r\n    // useScrollbar(desksWrapper, hasScroll);\r\n\r\n    // const hasScroll = window.setTimeout(function () {\r\n    //   const viewex = visibleDesks > 2 ? true : false;\r\n      \r\n    // }, 500);\r\n    // useScrollbar(desksWrapper, hasScroll);\r\n  \r\n    return (\r\n        <BoardsList ref={desksWrapper}>\r\n            {visibleDesks.length > 0 ? (\r\n        visibleDesks.map(desk => (\r\n          <DesksListItem key={desk._id} {...desk}/>\r\n        ))\r\n      ) : filterValue && desks ? (\r\n        <div></div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n        </BoardsList>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default DesksList;","import { CreateBoardBtn } from \"../CreateBoard/CreateBoard\";\r\nimport {\r\n  BoardsElement,\r\n  BoardsTitle,\r\n  // BoardsList,\r\n  // BoardsItem,\r\n  // ProjectsBox,\r\n  // ProjectSVG,\r\n  // BtnsSVGBox,\r\n  // BtnsSVG,\r\n} from \"./Boards.Styled\";\r\n// import sprite from \"../../../images/sprite.svg\";\r\nimport BoardsList from \"./BoardList\";\r\n\r\nexport const Boards = () => {\r\n  return (\r\n    <BoardsElement>\r\n      <BoardsTitle>My boards</BoardsTitle>\r\n      <CreateBoardBtn />\r\n      <BoardsList/>\r\n      {/* <BoardsList>\r\n        <BoardsItem>\r\n          <ProjectsBox>\r\n            <ProjectSVG\r\n              width=\"18\"\r\n              height=\"18\"\r\n              fill=\"var(--prOfBg)\"\r\n              stroke=\"var(--contrastColor)\"\r\n            >\r\n              <use href={sprite + `#icon-Project`}></use>\r\n            </ProjectSVG>\r\n            <span>Project office</span>\r\n          </ProjectsBox>\r\n\r\n          <BtnsSVGBox>\r\n            <BtnsSVG>\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"var(--prOfBg)\"\r\n                stroke=\"var(--myBoards)\"\r\n              >\r\n                <use href={sprite + `#icon-Icon-pencil`}></use>\r\n              </svg>\r\n            </BtnsSVG>\r\n            <BtnsSVG>\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"var(--prOfBg)\"\r\n                stroke=\"var(--myBoards)\"\r\n              >\r\n                <use href={sprite + `#icon-trash-04`}></use>\r\n              </svg>\r\n            </BtnsSVG>\r\n          </BtnsSVGBox>\r\n        </BoardsItem>\r\n        <BoardsItem>Neon Light Project</BoardsItem>\r\n      </BoardsList> */}\r\n    </BoardsElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const HelpElement = styled.div`\r\n  /* border: 1px solid white; */\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n  padding: 20px;\r\n  background-color: var(--needHelpBg);\r\n  border-radius: 8px;\r\n`;\r\nexport const IMG = styled.img`\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n`;\r\n\r\nexport const TextSpan = styled.span`\r\n  color: var(--accentColor);\r\n`;\r\n\r\nexport const HelpBtn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  margin-top: 18px;\r\n  font-size: 12px;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor:pointer;\r\n`;\r\n\r\nexport const HelpText = styled.p`\r\n  font-family: Poppins;\r\n  margin-left: 8px;\r\n  font-size: 12px;\r\n  color: var(--contrastColor);\r\n  font-weight: var(--fontWeight500);\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-size: 18px;\r\n  font-family: 'Poppins';\r\n  font-weight: 500;\r\n  letter-spacing: -0.36px;\r\n  margin-bottom: 24px;\r\n  color: var(--filterModalTitle);\r\n  \r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  align-items: start;\r\n  margin-bottom: 24px;\r\n\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  align-items: start;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 14px;\r\n  border: none;\r\n  border-radius: 8px;\r\n\r\n  font-family: 'Poppins';\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  letter-spacing: -0.28px;\r\n\r\n  color: #161616;\r\n  background-color: #BEDBB0;\r\n\r\n  \r\n  cursor: pointer;\r\n\r\n  \r\n`;\r\n\r\nexport const TitleInput = styled(Field)`\r\n  width: 100%;\r\n  height: 49px;\r\n  padding: 14px 18px;\r\n\r\n  font-size: 14px;\r\n  font-family: 'Poppins';\r\n  letter-spacing: -0.28px;\r\n  color: var(--filterModalTitle);\r\n  background-color: var(--backgroundInput);\r\n  border: 1px solid rgba(190, 219, 176, 0.5);\r\n  border-radius: 8px;\r\n  outline: none;\r\n\r\n \r\n\r\n  &::placeholder {\r\n    color: var(--filterModalText);\r\n    font-size: 14px;\r\n    font-family: 'Poppins';\r\n    letter-spacing: -0.28px;\r\n    \r\n\r\n  }\r\n`;\r\n\r\nexport const Textarea = styled(Field)`\r\n  resize: vertical;\r\n  width: 100%;\r\n  height: 120px;\r\n  padding: 14px 18px;\r\n  color: var(--filterModalTitle);\r\n  font-size: 14px;\r\n  font-family: 'Poppins';\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  letter-spacing: -0.28px;\r\n  \r\n  background-color: var(--backgroundInput);\r\n  border: 1px solid rgba(190, 219, 176, 0.5);\r\n  outline: none;\r\n  border-radius: 8px;\r\n\r\n  \r\n\r\n  margin-top: 14px;\r\n\r\n  &::placeholder {\r\n    color: var(--filterModalText);\r\n    font-size: 14px;\r\n    font-family: 'Poppins';\r\n    font-weight: 400;\r\n    line-height: normal;\r\n    letter-spacing: -0.28px;\r\n    \r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\nexport const ErrorSection = styled(ErrorMessage)`\r\n  padding-left: 14px;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-family: Poppins;\r\n  font-weight: 500;\r\n  letter-spacing: -0.36px;\r\n`;\r\n\r\nexport const ModalForm = styled(Form)`\r\n  margin: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n`;\r\nexport const ModalField = styled.div`\r\n  padding: 24px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  height: 355px;\r\n  border: 1px solid rgba(190, 219, 176, 0.5);\r\n  background-color: var(--themeBgColor);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  \r\n`;\r\n\r\nexport const CloseModal = styled.svg`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 14px;\r\n  \r\n  width: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n  `\r\n\r\n\r\n  \r\n\r\n","import React from \"react\";\r\nimport {\r\n  FormWrapper,\r\n  Section,\r\n  SubmitButton,\r\n  TitleInput,\r\n  SectionTitle,\r\n  Textarea,\r\n  ModalForm,\r\n  ErrorSection,\r\n  ModalField,\r\n  CloseModal,\r\n} from \"../NeedHelp/NeedHelp.Styled\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  comment: Yup.string().min(7).max(230).required(\"Comment is required\"),\r\n});\r\nconst initialValues = {\r\n  email: \"\",\r\n  comment: \"\",\r\n};\r\n\r\nconst NeedHelp = ({ close }) => {\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    resetForm();\r\n    close();\r\n  };\r\n  const handleClose = () => {\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <ModalField>\r\n      <CloseModal onClick={handleClose}>\r\n        <use\r\n          href={sprite + \"#icon-x\"}\r\n          width={18}\r\n          height={18}\r\n          stroke=\"var(--addBtnText)\"\r\n        />\r\n      </CloseModal>\r\n      <Section>\r\n        <SectionTitle>Need help</SectionTitle>\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <ModalForm>\r\n            <FormWrapper>\r\n              <ErrorSection name=\"email\" />\r\n              <TitleInput\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email address \"\r\n              />\r\n              <ErrorSection name=\"comment\" />\r\n              <Textarea type=\"text\" name=\"comment\" placeholder=\"Comment\" />\r\n            </FormWrapper>\r\n            <SubmitButton type=\"submit\">Send</SubmitButton>\r\n          </ModalForm>\r\n        </Formik>\r\n      </Section>\r\n    </ModalField>\r\n  );\r\n};\r\n\r\nexport default NeedHelp;\r\n","import { useImperativeHandle, useState, forwardRef } from \"react\";\r\nimport Modal from \"../Modal\"\r\nimport NeedHelp from \"./NeedHelp\";\r\n\r\n\r\nconst HelpModal = (_,ref) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n    setShowModal(false);\r\n    }\r\n    useImperativeHandle(ref, () => ({ openModal }));\r\n    return (\r\n        <>\r\n            {showModal&&<Modal close={closeModal}>\r\n            <NeedHelp close={closeModal}/>\r\n                </Modal>}\r\n        </>\r\n    )\r\n}\r\nexport default forwardRef(HelpModal);\r\n\r\n","import {\r\n  HelpElement,\r\n  IMG,\r\n  Text,\r\n  TextSpan,\r\n  HelpBtn,\r\n  HelpText,\r\n} from \"./CustomerSupport.Styled\";\r\nimport img from \"../../../images/flowerpot.png\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport HelpModal from \"../../Modals/NeedHelp/NeedHelpModal\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const CustomerSupport = () => {\r\n  const helpModalRef = useRef(null);\r\n\r\n  const openHelpModal = () => {\r\n    if (helpModalRef.current) {\r\n      helpModalRef.current.openModal()\r\n    }\r\n  }\r\n  return (\r\n    <HelpElement>\r\n      <IMG src={img} alt=\"flowerpot\" height=\"78\" width=\"54\" />\r\n      <Text>\r\n        If you need help with <TextSpan>TaskPro</TextSpan>, check out our\r\n        support resources or reach out to our customer support team.\r\n      </Text>\r\n      <HelpBtn onClick={openHelpModal}>\r\n        <svg width=\"20\" height=\"20\" stroke=\"var(--contrastColor)\" fill=\"none\">\r\n          <use href={sprite + `#icon-help-circle`}></use>\r\n        </svg>\r\n        <HelpText>Need Help?</HelpText>\r\n      </HelpBtn>\r\n      <HelpModal ref={helpModalRef} />\r\n    </HelpElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LogoutElement = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  /* font-family: Poppins; */\r\n  padding-left: 24px;\r\n  padding-top: 24px;\r\n  padding-bottom: 24px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const LogoutBtn = styled.button`\r\n  padding: 0;\r\n  font-family: Poppins;\r\n  background-color: var(--sidebarColor);\r\n  color: var(--logOut);\r\n  border: none;\r\n  font-size: 16px;\r\n  margin-left: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n`;\r\n","import { LogoutElement, LogoutBtn } from \"./LogOut.Styled\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport Notiflix from \"notiflix\";\r\nimport { logOut } from \"../../../redux/auth/authOperation\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const LogOut = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickLogOut = () => {\r\n    Notiflix.Confirm.init({\r\n      width: \"300px\",\r\n      position: \"center-top\",\r\n      fontFamily: \"Poppins\",\r\n      titleColor: \"#bedbb0\",\r\n      okButtonBackground: \"#bedbb0\",\r\n    });\r\n    Notiflix.Confirm.show(\r\n      \"Confirmation\",\r\n      \"Are you sure you want to log out?\",\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        dispatch(logOut());\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n  return (\r\n    <LogoutElement onClick={handleClickLogOut}>\r\n      <svg width=\"32\" height=\"32\">\r\n        <use href={sprite + `#icon-login`}></use>\r\n      </svg>\r\n      <LogoutBtn type=\"button\">\r\n        Log out\r\n      </LogoutBtn>\r\n    </LogoutElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100vh;\r\n  /* max-height: 100%; */\r\n  background-color: var(--sidebarColor);\r\n  color: var(--contrastColor);\r\n  min-width: 260px;\r\n  width: 260px;\r\n\r\n  @media screen and (max-width: 375px) {\r\n    min-width: 225px;\r\n    width: 225px;\r\n  }\r\n  @media screen and (max-width: 1440px) {\r\n    height: calc(100vh - 68px);\r\n    /* height: 702px; */\r\n    width: 260px;\r\n    overflow: auto;\r\n    position: fixed;\r\n    /* left: -260px; */\r\n    top: 68px;\r\n    z-index: 1000;\r\n    /* min-height: 100%; */\r\n  }\r\n`;\r\n","import { Logo } from \"./Logo/Logo\";\r\nimport { Boards } from \"./Boards/Boards\";\r\nimport { CustomerSupport } from \"./CustomerSupport/CustomerSupport\";\r\nimport { LogOut } from \"./LogOut/LogOut\";\r\nimport { Section } from \"./SideBar.Styled\";\r\n\r\nexport const Sidebar = () => {\r\n  return (\r\n    <Section>\r\n      <div>\r\n        <Logo />\r\n        <Boards />\r\n      </div>\r\n      <div>\r\n        <CustomerSupport />\r\n        <LogOut />\r\n      </div>\r\n    </Section>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.div`\r\n  font-family: Poppins;\r\n  display: flex;\r\n\r\n  max-width: 100%;\r\n  /* padding: 0; */\r\n  margin: 0 auto;\r\n  box-sizing: border-box;\r\n\r\n  /* @media screen and (min-width: 375px) {\r\n    max-width: 375px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 768px;\r\n    padding: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    max-width: 1440px;\r\n    padding: 0;\r\n  } */\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Header } from \"../../components/Header/Header\";\r\nimport { Sidebar } from \"../../components/Sidebar/Sidebar\";\r\nimport { ScreensPage } from \"../ScreensPage/ScreensPage\";\r\nimport { Section, Main } from \"./HomePage.Styled\";\r\n\r\nconst HomePage = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      {isSidebarOpen && windowWidth <= 1439 && <Sidebar />}\r\n      {windowWidth >= 1440 && <Sidebar />}\r\n      <Main>\r\n        <Header openSideBar={toggleSidebar} />\r\n        <ScreensPage />\r\n      </Main>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["UserInfoBox","styled","span","_templateObject","_taggedTemplateLiteral","div","_templateObject2","UserName","p","_templateObject3","UserAvatarBox","_templateObject4","UserAvatar","img","_templateObject5","EditProfileForm","form","EditProfileTitle","h2","EditProfileImg","EditProfileSvg","svg","FileWrapper","Foto","input","_templateObject6","EditFoto","_templateObject7","EditCloseBtn","button","_templateObject8","EditProfileInput","_templateObject9","PasswordWrapper","_templateObject10","ToggleShowPasword","_templateObject11","BtnEditProfile","_templateObject12","_ref","modalClose","userAvatar","useSelector","getAvatar","userName","getName","userEmail","getUserEmail","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","handleAvatarChange","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","wrap","_context","prev","next","FormData","append","target","files","updateAvatar","stop","_x","apply","arguments","handleSubmit","_ref3","_callee2","_yield$axios$patch","data","_context2","preventDefault","name","value","trim","updateName","Notify","success","t0","console","log","email","updateEmail","t1","password","axios","patch","sent","message","t2","_x2","_jsxs","onSubmit","encType","children","_jsx","type","onClick","width","height","stroke","href","sprite","src","alt","accept","onChange","placeholder","minLength","maxLength","prevShowPassword","BsEyeSlash","color","style","BsEye","UserInfo","isModalOpen","setIsModalOpen","modalOpen","_Fragment","EditProfile","UserSection","HeaderSection","header","Container","Title","Wrapper","List","ul","props","isOpen","Item","li","themes","ThemeSelect","isSelectOpen","setIsSelectOpen","_useState3","_useState4","selectedTheme","setSelectedTheme","localTheme","selectGetTheme","useEffect","document","body","classList","remove","add","IoIosArrowDown","size","map","theme","setTheme","updateTheme","setTimeout","Button","Svg","openSideBar","xlinkHref","concat","url","Header","BurgerMenu","LogoElement","LogoTitle","h1","Logo","CreateBoardBtnElement","CreateBoardBtnText","Btn","close","title","setTitle","icons","setIcons","_useState5","_useState6","backImg","setBackImg","ownerUser","getUserId","onFormChange","_e$target","id","Error","className","css","newDesk","icon","background","addDesk","htmlFor","fill","backimg","NewBoardModal","_","ref","showModal","setShowModal","openModal","closeModal","useImperativeHandle","Modal","NewBoard","forwardRef","CreateBoardBtn","newBoardModalRef","useRef","current","BoardsElement","BoardsTitle","BoardsList","BoardsItem","isSelected","ProjectsBox","ProjectSVG","BtnsSVGBox","BtnsSVG","deskId","selectChangeDeskId","oldDeskTitle","selectChangeDeskTitle","newTitle","_id","changeDeskNameById","newIcon","changeDeskIconById","newbackImg","changeDeskBGById","EditBoardModal","EditBoard","DesksListItem","EditBoardModalRef","activeDeskId","selectActiveDeskId","setActiveDeskId","changeActiveDeskById","handleClickChangeDeskById","deleteDesk","visibleDesks","selectVisibleDesks","desksWrapper","selectDesks","selectBackImg","fetchDesks","length","desk","_objectSpread","Boards","HelpElement","IMG","Text","TextSpan","HelpBtn","HelpText","SectionTitle","FormWrapper","Section","SubmitButton","TitleInput","Field","Textarea","ErrorSection","ErrorMessage","ModalForm","Form","ModalField","CloseModal","validationSchema","Yup","shape","required","comment","min","max","initialValues","Formik","values","resetForm","HelpModal","NeedHelp","CustomerSupport","helpModalRef","LogoutElement","LogoutBtn","LogOut","Notiflix","init","position","fontFamily","titleColor","okButtonBackground","show","logOut","section","Sidebar","Main","window","innerWidth","windowWidth","setWindowWidth","isSidebarOpen","setIsSidebarOpen","handleResize","addEventListener","removeEventListener","ScreensPage"],"sourceRoot":""}