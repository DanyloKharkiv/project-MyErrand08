{"version":3,"file":"static/js/392.67d0f436.chunk.js","mappings":"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","sources":["components/AuthForm/RegistrationForm/RegistrationForm.Styled.js","components/AuthForm/RegistrationForm/RegistrationForm.jsx","components/AuthForm/LoginForm/LoginForm.Styled.js","components/AuthForm/LoginForm/LoginForm.jsx","page/AuthPage/AuthPage.Styled.js","page/AuthPage/AuthPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const FormRegistration = styled(Form)`\r\n  width: 100%;\r\n  height: 363px;\r\n  padding: 24px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: var(--blackColor);\r\n  border-radius: 8px;\r\n  margin: 188px 508px;\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 335px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 424px;\r\n    height: 395px;\r\n    padding: 40px;\r\n  }\r\n`;\r\n\r\nexport const FeedbackFormGroup = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 14px;\r\n  position: relative;\r\n`;\r\n\r\nexport const PasswordWrapper = styled.div``;\r\n\r\nexport const InputForm = styled(Field)`\r\n  padding: 14px 18px;\r\n  width: 100%;\r\n  height: 49px;\r\n  border: 1px solid #bedbb0;\r\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n  border-radius: 8px;\r\n  background-color: var(--blackColor);\r\n  color: #ffffff;\r\n  font-family: var(--poppinsFont);\r\n  font-size: var(--fontSize14);\r\n\r\n  outline: none;\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 285px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 342px;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-size: var(--fontSize14);\r\n  }\r\n`;\r\n\r\nexport const ToggleShowPasword = styled.span`\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 18px;\r\n  height: 18px;\r\n`;\r\n\r\nexport const Btnwrapper = styled.div`\r\n  margin-top: 24px;\r\n`;\r\n\r\nexport const BtnRegister = styled.button`\r\n  width: 100%;\r\n  height: 49px;\r\n  background-color: #bedbb0;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  color: var(--blackColor);\r\n  font-family: var(--poppinsFont);\r\n  font-weight: var(--fontWeight500);\r\n  border: none;\r\n  transition: var(--transition);\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 285px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 342px;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\r\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\r\n  }\r\n`;\r\n\r\nexport const StyleErrorMessage = styled(ErrorMessage)``;\r\n\r\nexport const Error = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  color: red;\r\n  font-size: 10px;\r\n  margin-top: 1px;\r\n`;\r\n\r\nexport const Link = styled.div`\r\n  height: 27px;\r\n  text-align: start;\r\n  font-family: var(--poppinsFont);\r\n  font-size: var(--fontSize18);\r\n  font-weight: var(--fontWeight500);\r\n  display: flex;\r\n  gap: 14px;\r\n  margin-bottom: 40px;\r\n`;","import { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn, register } from '../../../redux/auth/authOperation';\r\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\r\nimport { useState } from 'react';\r\nimport {\r\n  FormRegistration,\r\n  FeedbackFormGroup,\r\n  PasswordWrapper,\r\n  InputForm,\r\n  ToggleShowPasword,\r\n  Btnwrapper,\r\n  BtnRegister,\r\n  StyleErrorMessage,\r\n  Error,\r\n  Link,\r\n} from './RegistrationForm.Styled'\r\n\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().min(4).max(20).required(),\r\n  email: yup\r\n    .string()\r\n    .email('Invalid email')\r\n    .test('email-format', 'Invalid email format', (value) => {\r\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n      return emailRegex.test(value);\r\n    })\r\n    .required(),\r\n  password: yup.string().min(8).max(64).required(),\r\n});\r\n\r\nexport const RegistrationForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n  };\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    try {\r\n      await dispatch(register(values));\r\n      const { email, password } = values;\r\n      await dispatch(logIn({ email, password }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } \r\n\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={schema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <FormRegistration>\r\n          <Link>\r\n            <NavLink to=\"/auth/register\" style={{ color: '#ffffff' }}>\r\n              Registration\r\n            </NavLink>\r\n            <NavLink to=\"/auth/login\" style={{ color: '#ffffff4d' }}>\r\n              Log In\r\n            </NavLink>\r\n          </Link>\r\n          <FeedbackFormGroup>\r\n            <InputForm type=\"text\" name=\"name\" placeholder=\"Enter your name\" />\r\n            <StyleErrorMessage name=\"name\">\r\n              {(msg) => <Error>{msg}</Error>}\r\n            </StyleErrorMessage>\r\n          </FeedbackFormGroup>\r\n          <FeedbackFormGroup>\r\n            <InputForm\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            <StyleErrorMessage name=\"email\">\r\n              {(msg) => <Error>{msg}</Error>}\r\n            </StyleErrorMessage>\r\n          </FeedbackFormGroup>\r\n          <FeedbackFormGroup>\r\n            <PasswordWrapper>\r\n              <InputForm\r\n                type={showPassword ? 'text' : 'password'}\r\n                name=\"password\"\r\n                placeholder=\"Create a password\"\r\n              />\r\n              <ToggleShowPasword onClick={togglePasswordVisibility}>\r\n                {showPassword ? (\r\n                  <BsEyeSlash\r\n                    color=\"#ffffff4d\"\r\n                    style={{ width: 18, height: 18 }}\r\n                  />\r\n                ) : (\r\n                  <BsEye color=\"#ffffff4d\" style={{ width: 18, height: 18 }} />\r\n                )}\r\n              </ToggleShowPasword>\r\n            </PasswordWrapper>\r\n            <StyleErrorMessage name=\"password\">\r\n              {(msg) => <Error>{msg}</Error>}\r\n            </StyleErrorMessage>\r\n          </FeedbackFormGroup>\r\n          <Btnwrapper>\r\n            <BtnRegister type=\"submit\">Register Now</BtnRegister>\r\n          </Btnwrapper>\r\n        </FormRegistration>\r\n      </Formik>\r\n    </>\r\n  );\r\n};","import styled from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const FormikStyle = styled(Formik)``;\r\n\r\nexport const FormLogin = styled(Form)`\r\n  width: 100%;\r\n  height: 300px;\r\n  padding: 24px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: var(--blackColor);\r\n  border-radius: 8px;\r\n  margin: 219px 508px;\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 335px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 424px;\r\n    height: 332px;\r\n    padding: 40px;\r\n  }\r\n`;\r\n\r\nexport const FeedbackFormGroup = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 14px;\r\n  position: relative;\r\n`;\r\n\r\nexport const PasswordWrapper = styled.div``;\r\n\r\nexport const ToggleShowPasword = styled.span`\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 18px;\r\n  height: 18px;\r\n`;\r\n\r\nexport const InputEmail = styled(Field)`\r\n  padding: 13px 18px;\r\n  width: 100%;\r\n  border: 1px solid #bedbb0;\r\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n  border-radius: 8px;\r\n  background-color: var(--blackColor);\r\n  color: #ffffff;\r\n  font-family: var(--poppinsFont);\r\n  font-size: var(--fontSize14);\r\n  max-height: 49px;\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 285px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 342px;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-size: var(--fontSize14);\r\n  }\r\n`;\r\n\r\nexport const InputPassword = styled(Field)`\r\n  padding: 13px 18px;\r\n  width: 100%;\r\n  border: 1px solid #bedbb0;\r\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\r\n  border-radius: 8px;\r\n  background-color: var(--blackColor);\r\n  color: #ffffff;\r\n  font-family: var(--poppinsFont);\r\n  font-size: var(--fontSize14);\r\n\r\n  outline: none;\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 285px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 342px;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-size: var(--fontSize14);\r\n  }\r\n`;\r\n\r\nexport const StyleErrorMessage = styled(ErrorMessage)``;\r\n\r\nexport const Error = styled.p`\r\n  position: absolute;\r\n  width: 100%;\r\n  color: red;\r\n  font-size: 10px;\r\n  margin-top: 1px;\r\n`;\r\n\r\nexport const Btnwrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 24px;\r\n`;\r\n\r\nexport const BtnLogIn = styled.button`\r\n  width: 100%;\r\n  height: 49px;\r\n  background-color: #bedbb0;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  color: var(--blackColor);\r\n  font-family: var(--poppinsFont);\r\n  font-weight: var(--fontWeight500);\r\n  border: none;\r\n  transition: var(--transition);\r\n\r\n  @media screen and (min-width: 375px) {\r\n    width: 285px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 342px;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\r\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\r\n  }\r\n`;\r\n\r\nexport const Link = styled.div`\r\n  height: 27px;\r\n  text-align: start;\r\n  font-family: var(--poppinsFont);\r\n  font-size: var(--fontSize18);\r\n  font-weight: var(--fontWeight500);\r\n  display: flex;\r\n  gap: 14px;\r\n  margin-bottom: 40px;\r\n`;","import {\r\n  FormikStyle,\r\n  FormLogin,\r\n  FeedbackFormGroup,\r\n  InputEmail,\r\n  InputPassword,\r\n  Btnwrapper,\r\n  BtnLogIn,\r\n  PasswordWrapper,\r\n  ToggleShowPasword,\r\n  StyleErrorMessage,\r\n  Error,\r\n  Link,\r\n} from './LoginForm.Styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as yup from 'yup';\r\nimport { logIn } from '../../../redux/auth/authOperation';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\r\n\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Invalid email')\r\n    .test('email-format', 'Invalid email format', (value) => {\r\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n      return emailRegex.test(value);\r\n    })\r\n    .required(),\r\n  password: yup.string().min(8).max(64).required(),\r\n});\r\n\r\nexport const LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    try {\r\n      dispatch(logIn(values));\r\n      navigate('/home');\r\n      resetForm();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormikStyle\r\n        initialValues={initialValues}\r\n        validationSchema={schema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <FormLogin>\r\n          <Link>\r\n            <NavLink to=\"/auth/register\" style={{ color: '#ffffff4d' }}>\r\n              Registration\r\n            </NavLink>\r\n            <NavLink to=\"/auth/login\" style={{ color: '#ffffff' }}>\r\n              Log In\r\n            </NavLink>\r\n          </Link>\r\n          <FeedbackFormGroup>\r\n            <InputEmail\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            <StyleErrorMessage name=\"email\">\r\n              {(msg) => <Error>{msg}</Error>}\r\n            </StyleErrorMessage>\r\n          </FeedbackFormGroup>\r\n          <FeedbackFormGroup>\r\n            <PasswordWrapper>\r\n              <InputPassword\r\n                type={showPassword ? 'text' : 'password'}\r\n                name=\"password\"\r\n                placeholder=\"Confirm a password\"\r\n              />\r\n              <ToggleShowPasword onClick={togglePasswordVisibility}>\r\n                {showPassword ? (\r\n                  <BsEyeSlash\r\n                    color=\"#ffffff4d\"\r\n                    style={{ width: 18, height: 18 }}\r\n                  />\r\n                ) : (\r\n                  <BsEye color=\"#ffffff4d\" style={{ width: 18, height: 18 }} />\r\n                )}\r\n              </ToggleShowPasword>\r\n            </PasswordWrapper>\r\n            <StyleErrorMessage name=\"password\">\r\n              {(msg) => <Error>{msg}</Error>}\r\n            </StyleErrorMessage>\r\n          </FeedbackFormGroup>\r\n          <Btnwrapper>\r\n            <BtnLogIn type=\"submit\">Log In Now</BtnLogIn>\r\n          </Btnwrapper>\r\n        </FormLogin>\r\n      </FormikStyle>\r\n    </>\r\n  );\r\n}","import styled from 'styled-components';\r\n\r\nexport const FormWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;","import React from 'react';\r\nimport { RegistrationForm } from '../../components/AuthForm/RegistrationForm/RegistrationForm';\r\nimport { useParams } from 'react-router-dom';\r\nimport { LoginForm } from '../../components/AuthForm/LoginForm/LoginForm';\r\nimport { FormWrapper } from './AuthPage.Styled';\r\n\r\nconst AuthPage = () => {\r\n  const { id } = useParams();\r\n  return (\r\n    <div>\r\n      <FormWrapper>\r\n        {id === 'login' && <LoginForm />}\r\n        {id === 'register' && <RegistrationForm />}\r\n      </FormWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n\r\n\r\n\r\n"],"names":["FormRegistration","styled","Form","_templateObject","_taggedTemplateLiteral","FeedbackFormGroup","div","_templateObject2","PasswordWrapper","_templateObject3","InputForm","Field","_templateObject4","ToggleShowPasword","span","_templateObject5","Btnwrapper","_templateObject6","BtnRegister","button","_templateObject7","StyleErrorMessage","ErrorMessage","_templateObject8","Error","_templateObject9","Link","_templateObject10","initialValues","name","email","password","schema","yup","shape","min","max","required","test","value","RegistrationForm","dispatch","useDispatch","_useState","useNavigate","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","wrap","_context","prev","next","register","logIn","t0","console","log","stop","_x","_x2","apply","arguments","_jsx","_Fragment","children","Formik","validationSchema","onSubmit","_jsxs","NavLink","to","style","color","type","placeholder","msg","onClick","prevShowPassword","BsEyeSlash","width","height","BsEye","FormikStyle","FormLogin","InputEmail","InputPassword","p","BtnLogIn","_templateObject11","_templateObject12","LoginForm","navigate","error","FormWrapper","id","useParams"],"sourceRoot":""}