{"version":3,"file":"static/js/996.3f3a87c9.chunk.js","mappings":"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","sources":["components/Header/UserInfo/UserInfo.Styled.js","components/Modals/EditProfile/EditProfile.Styled.js","components/Modals/EditProfile/EditProfile.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.Styled.js","components/Header/ThemeSelect/ThemeSelect.Styled.js","components/Header/ThemeSelect/ThemeSelect.jsx","components/BurgerMenu/BurgerMenu.Styled.js","components/BurgerMenu/BurgerMenu.jsx","components/Header/Header.jsx","components/Sidebar/Logo/Logo.Styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/CreateBoard/CreateBoard.Styled.js","webpack://project-myerrand08/./src/components/Modals/NewBoard/css.module.css?950a","components/Modals/NewBoard/NewBoard.jsx","components/Modals/NewBoard/NewBoardModal.js","components/Sidebar/CreateBoard/CreateBoard.jsx","components/Sidebar/Boards/Boards.Styled.js","components/Sidebar/Boards/BoardListItem.jsx","components/Sidebar/Boards/BoardList.jsx","components/Sidebar/Boards/Boards.jsx","components/Sidebar/CustomerSupport/CustomerSupport.Styled.js","components/Modals/NeedHelp/NeedHelp.Styled.js","components/Modals/NeedHelp/NeedHelp.jsx","components/Modals/NeedHelp/NeedHelpModal.jsx","components/Sidebar/CustomerSupport/CustomerSupport.jsx","components/Sidebar/LogOut/LogOut.Styled.js","components/Sidebar/LogOut/LogOut.jsx","components/Sidebar/SideBar.Styled.js","components/Sidebar/Sidebar.jsx","page/HomePage/HomePage.Styled.js","page/HomePage/HomePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.span`\r\n  margin-right: 8px;\r\n  font-size: 14px;\r\n`;\r\nexport const UserInfoBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 8px;\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n  font-family: var(--poppinsFont);\r\n  font-weight: var(--fontWeight500);\r\n  font-size: var(--fontSize14);\r\n  margin-left: 14px;\r\n  cursor: pointer;\r\n  color: var(--userNameColor);\r\n  &:hover {\r\n    color: var(--accentColor);\r\n  }\r\n`;\r\n\r\nexport const UserAvatar = styled.img`\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const EditProfileForm = styled.form`\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n    padding: 24px;\r\n    height: 440px;\r\n    border-width: 1px;\r\n    border-color: #BEDBB080;\r\n    border-style: solid;\r\n    border-radius: 8px;\r\n    background-color: var(--modalBg);\r\n    z-index: 1;\r\n    box-shadow: 0px 4px 16px 0px #1616160D;\r\n\r\n    @media screen and (min-width: 375px) {\r\n        width: 335px;\r\n    }\r\n\r\n    @media screen and (min-width: 768px) {\r\n        width: 400px;\r\n    }\r\n    `;\r\n\r\nexport const EditProfileTitle = styled.h2`\r\n    color: var(--modalTitle); \r\n    font-size: 18px;\r\n    margin-bottom: 24px;\r\n    `;\r\n\r\nexport const EditProfileImg = styled.img`\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nexport const FileWrapper = styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 130px;\r\n    transform: translate(-50%, 0);\r\n    background-color: var(--modalEditPlusFoto);\r\n    width: 24px;\r\n    height:24px;\r\n    border-radius: 8px;\r\n`;\r\n\r\nexport const Foto = styled.input`\r\n    width: 24px;\r\n    height: 24px;\r\n    background-color: #BEDBB0;\r\n    border-style: none;\r\n    border-radius: 8px;\r\n    opacity: 0;\r\n    `;\r\n\r\nexport const EditFoto = styled.svg`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    `;\r\n\r\nexport const EditCloseBtn = styled.button`\r\n    position: absolute;\r\n    right: 14px;\r\n    top: 14px;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-style: none;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    `;\r\n\r\n    export const EditProfileInput = styled.input`\r\n    padding: 14px 18px;\r\n    margin-bottom: 14px;\r\n    width: 100%;\r\n    height: 49px;\r\n    border: 1px solid var(--modalInputBorder);\r\n    border-radius: 8px;\r\n    background-color: var(--modalInputBg);\r\n    color: var(--modalInputTxt);\r\n    font-family: var(--poppinsFont);\r\n    font-size: var(--fontSize14);\r\n\r\n    outline: none;\r\n\r\n    &::placeholder {\r\n        font-size: var(--fontSize14);\r\n    }\r\n    `;\r\n\r\n    export const PasswordWrapper = styled.div`\r\n    position: relative;\r\n    `;\r\n\r\n    export const ToggleShowPasword = styled.span`\r\n    position: absolute;\r\n    top: 16px;\r\n    right: 18px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n    `;\r\n\r\n    export const BtnEditProfile = styled.button`\r\n    width: 100%;\r\n    height: 49px;\r\n    margin-top: 10px;\r\n    margin-bottom: 24px;\r\n    background-color: var(--modalAccentBtnBg);\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    color: var(--modalAccentBtnTxt);\r\n    font-family: var(--poppinsFont);\r\n    font-weight: var(--fontWeight500);\r\n    border: none;\r\n    transition: var(--transition);\r\n\r\n    &:hover {\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\r\n        rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\r\n    }\r\n    `;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAvatar, getName, getUserEmail } from \"../../../redux/auth/authSelector\";\r\nimport userTemp from \"../../../images/temp_avatar.png\";\r\nimport {\r\n    EditProfileForm,\r\n    EditProfileInput,\r\n    BtnEditProfile,\r\n    EditProfileTitle,\r\n    EditProfileImg,\r\n    EditCloseBtn,\r\n    ToggleShowPasword,\r\n    PasswordWrapper,\r\n    Foto,\r\n    EditFoto,\r\n    FileWrapper\r\n} from \"./EditProfile.Styled\";\r\nimport sprite from '../../../images/sprite.svg';\r\nimport { useState } from \"react\";\r\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\r\nimport axios from \"axios\";\r\nimport { Notify } from \"notiflix\";\r\nimport { updateAvatar, updateEmail, updateName } from \"../../../redux/auth/authOperation\";\r\n\r\nconst EditProfile = ({modalClose}) => {\r\n    const userAvatar = useSelector(getAvatar);\r\n    const userName = useSelector(getName);\r\n    const userEmail = useSelector(getUserEmail);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [selectedAvatar, setSelectedAvatar] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword((prevShowPassword) => !prevShowPassword);\r\n    };\r\n\r\n    const handleAvatarChange = (e) => {\r\n        setSelectedAvatar(e.target.files[0]);\r\n        Notify.info(\"File added\");\r\n    }\r\n\r\n    const handleSubmit = async (e) => { \r\n        e.preventDefault();\r\n\r\n        if (e.target.name.value.trim()) {\r\n            try {\r\n                await dispatch(updateName(e.target.name.value.trim()));\r\n                Notify.success(\"Name changed\");\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        if (e.target.email.value.trim()) {\r\n            try {\r\n                await dispatch(updateEmail(e.target.email.value.trim()));\r\n                Notify.success(\"Email changed\");\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        if (e.target.password.value.trim()) {\r\n            try {\r\n                const { data } = await axios.patch(\"/users/password\", { password: e.target.password.value.trim() });\r\n                Notify.success(data.message);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        if (selectedAvatar) { \r\n            try {\r\n                const formData = new FormData();\r\n                formData.append(\"avatar\", selectedAvatar);\r\n                await dispatch(updateAvatar(formData));\r\n                Notify.success(\"Avatar changed\");\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <EditProfileForm onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n            <EditProfileTitle>Edit profile</EditProfileTitle>\r\n            <EditCloseBtn type=\"button\" onClick={()=>{modalClose()}}>\r\n                <svg width=\"18\" height=\"18\" stroke=\"var(--modalCloseIcon)\">\r\n                    <use href={sprite +'#icon-x'}></use>\r\n                </svg>\r\n            </EditCloseBtn>\r\n            <EditProfileImg src={userAvatar ? userAvatar : userTemp} alt=\"user_icon\" width={68} height={68} />\r\n            <FileWrapper>\r\n                <Foto type=\"file\" name=\"avatar\" accept=\"image/*,.png,.jpg,.gif,.web\" onChange={handleAvatarChange}>\r\n                </Foto>\r\n                <EditFoto width=\"10\" height=\"10\" stroke=\"black\" >\r\n                    <use href = {sprite+'#icon-plus'}></use>\r\n                </EditFoto>\r\n            </FileWrapper>\r\n            <EditProfileInput type=\"text\" name=\"name\" placeholder={userName}></EditProfileInput>\r\n            <EditProfileInput type=\"email\" name=\"email\" placeholder={userEmail}></EditProfileInput> \r\n            {/* pattern=\"/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\" */}\r\n            <PasswordWrapper>\r\n                <EditProfileInput type={showPassword ? 'text' : 'password'} name=\"password\" placeholder=\"Password\" minLength=\"8\" maxLength=\"64\"></EditProfileInput>\r\n                <ToggleShowPasword onClick={togglePasswordVisibility}>\r\n                    {showPassword ? (\r\n                        <BsEyeSlash\r\n                        color=\"var(--modalSmallTitle)\"\r\n                        style={{ width: 18, height: 18 }}\r\n                        />\r\n                    ) : (\r\n                        <BsEye color=\"var(--modalSmallTitle)\" style={{ width: 18, height: 18 }} />\r\n                    )}\r\n                </ToggleShowPasword>\r\n            </PasswordWrapper>\r\n            <BtnEditProfile type=\"submit\">Send</BtnEditProfile>\r\n        </EditProfileForm>\r\n    );\r\n};\r\n\r\nexport default EditProfile;","import { UserInfoBox, UserName, UserAvatar } from \"./UserInfo.Styled\";\r\n//import sprite from \"../../../images/sprite.svg\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { getName, getAvatar } from \"../../../redux/auth/authSelector\";\r\nimport userTemp from \"../../../images/temp_avatar.png\";\r\nimport { useState } from \"react\";\r\nimport EditProfile from \"../../Modals/EditProfile/EditProfile\";\r\n\r\nexport const UserInfo = () => {\r\n  const userName = useSelector(getName);\r\n  const userAvatar = useSelector(getAvatar);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const avatarURL = userAvatar ? userAvatar : userTemp;\r\n\r\n  const modalClose = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  const modalOpen = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UserInfoBox>\r\n        <UserName>{userName}</UserName>\r\n        <UserAvatar src={avatarURL} alt=\"user_icon\" width={32} height={32} onClick={modalOpen}/>\r\n      </UserInfoBox>\r\n      {isModalOpen && <EditProfile modalClose={modalClose} />}\r\n    </>\r\n  );\r\n};\r\n\r\n/**  return (\r\n    <>\r\n      <UserInfoBox>\r\n        <UserName>{userName}</UserName>\r\n        {!userAvatar && \r\n                <UserAvatar>\r\n                  <svg width=\"32\" height=\"32\" onClick={modalOpen}>\r\n                    <use href={sprite + `#icon-user`}></use>\r\n                    </svg>\r\n                    </UserAvatar>}\r\n        {userAvatar &&\r\n        <UserAvatar src={userAvatar} alt=\"user_icon\" width={32} height={32} onClick={modalOpen}/>}\r\n      </UserInfoBox>\r\n      {isModalOpen && <EditProfile modalClose={modalClose} />}\r\n    </>\r\n  );\r\n}; */\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserSection = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nexport const HeaderSection = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 18px 24px 18px 24px;\r\n  /* border: 1px solid red; */\r\n  /* max-width: 100%; */\r\n  /* height: 68px; */\r\n  background-color: var(--headerColor);\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin-right: 14px;\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-size: var(--fontSize14);\r\n  font-family: var(--poppinsFont);\r\n  font-weight: var(--fontWeight500);\r\n  letter-spacing: -0.28px;\r\n  color: var(--themeTitle);\r\n  cursor: pointer;\r\n  :hover {\r\n    color: var(--accentColor);\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  position: absolute;\r\n  opacity: ${(props) => (props.isOpen ? '1' : '0')};\r\n  transform: translateY(${(props) => (props.isOpen ? '0' : '-10px')});\r\n  transition: opacity 0.2s, transform 0.3s;\r\n  pointer-events: ${(props) => (props.isOpen ? 'visible' : 'none')};\r\n\r\n  display: flex;\r\n  padding: 18px 44px 18px 18px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: var(--borderRadius8);\r\n  background-color: var(--themeBgColor);\r\n  box-shadow: 0px 4px 16px 0px var(--themeBoxShadow);\r\n\r\n  gap: 8px;\r\n  top: 19px;\r\n  left: 0px;\r\n  z-index: 999;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  cursor: pointer;\r\n  color: var(--themeItem);\r\n  transition: color 0.4s;\r\n  :hover {\r\n    color: var(--accentColor);\r\n  }\r\n`;","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTheme } from \"../../../redux/theme/themeSlice\";\r\nimport { updateTheme } from \"../../../redux/auth/authOperation\";\r\nimport {Container, Title, Wrapper, List, Item} from \"./ThemeSelect.Styled\";\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\nimport { selectGetTheme } from \"../../../redux/auth/authSelector\";\r\n\r\n\r\nconst themes = [\r\n  { name: \"Light\", value: \"light\" },\r\n  { name: \"Dark\", value: \"dark\" },\r\n  { name: \"Violet\", value: \"violet\" },\r\n];\r\n\r\n\r\nexport const ThemeSelect = () => {\r\n  const dispatch = useDispatch();\r\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\r\n  const [selectedTheme, setSelectedTheme] = useState(\"dark\");\r\n  const localTheme = useSelector(selectGetTheme);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.remove('light-theme', 'dark-theme', 'violet-theme');\r\n    document.body.classList.add(selectedTheme + '-theme');\r\n  }, [selectedTheme]);\r\n\r\n  const handleThemeToggle = (theme) => {\r\n    dispatch(setTheme(theme));\r\n    dispatch(updateTheme(theme));\r\n    setTimeout(() => {\r\n      setSelectedTheme(theme);\r\n    }, 10);\r\n    setIsSelectOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!localTheme) {\r\n      return\r\n    }\r\n  \r\n    setSelectedTheme(\r\n      localTheme\r\n    )\r\n\r\n  }, [])\r\n  \r\n\r\n\r\n  return (\r\n    <Container isOpen={isSelectOpen}>\r\n      <Wrapper onClick={() => setIsSelectOpen(!isSelectOpen)}>\r\n        <Title>Theme</Title>\r\n        <IoIosArrowDown size={16} color=\"var(--themeTitle)\"/>\r\n      </Wrapper>\r\n      <List isOpen={isSelectOpen}>\r\n        {themes.map(({ value, name }) => (\r\n          <Item key={value} onClick={() => handleThemeToggle(value)}>\r\n            {name}\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: var(--accentColor);\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const Svg = styled.svg`\r\n  stroke: var(--userNameColor);\r\n\r\n  &:hover {\r\n    stroke: var(--accentColor);\r\n  }\r\n`;","import url from '../../images/sprite.svg';\r\nimport { Button, Svg } from './BurgerMenu.Styled';\r\n\r\nconst BurgerMenu = ({ openSideBar }) => {\r\n  return (\r\n      <div>\r\n      <Button onClick={openSideBar}>\r\n        <Svg width={24} height={24}>\r\n          <use xlinkHref={`${url}#icon-menu-01`} />\r\n        </Svg>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;","import { UserInfo } from \"./UserInfo/UserInfo\";\r\nimport { HeaderSection, UserSection } from \"./Header.Styled\";\r\nimport { ThemeSelect } from \"./ThemeSelect/ThemeSelect\";\r\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\r\n\r\nexport const Header = ({ openSideBar }) => {\r\n  return (\r\n    <HeaderSection>\r\n      <BurgerMenu openSideBar={openSideBar} />\r\n      <UserSection>\r\n        <ThemeSelect />\r\n        <UserInfo />\r\n      </UserSection>\r\n    </HeaderSection>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LogoElement = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-top: 24px;\r\n  margin-left: 24px;\r\n  margin-bottom: 60px;\r\n  /* border: 1px solid white; */\r\n  width: 109px;\r\n  height: 32px;\r\n`;\r\n\r\nexport const LogoTitle = styled.h1`\r\n  color: var(--contrastColor);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: 24px;\r\n  letter-spacing: -4%;\r\n  /* text-align: center; */\r\n`;\r\n\r\nexport const LogoSVG = styled.svg`\r\npath {\r\n  fill: var(--logo); \r\n}\r\n`\r\n","import { LogoElement, LogoTitle } from \"./Logo.Styled\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\n\r\nexport const Logo = () => {\r\n  return (\r\n    <LogoElement>\r\n      <svg width=\"32\" height=\"32\" >\r\n        <use href={sprite + `#icon-icon-logo`}></use>\r\n      </svg>\r\n      <LogoTitle>Task Pro</LogoTitle>\r\n    </LogoElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const CreateBoardBtnElement = styled.div`\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n  padding-top: 14px;\r\n  padding-bottom: 14px;\r\n  border-top: 1px solid var(--boarder);\r\n  border-bottom: 1px solid var(--boarder);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  // height: 70px; \r\n  font-weight: var(--fontWeight500);\r\n`;\r\n\r\nexport const CreateBoardBtnText = styled.p`\r\n  /* margin-top: 14px;\r\n  margin-bottom: 14px; */\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  /* margin-top: 19px;\r\n  margin-bottom: 15px; */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 36px;\r\n  background-color: var(--plusBg);\r\n  border: none;\r\n  border-radius: 5px;\r\n`;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"css_modal__82pUi\",\"title\":\"css_title__4MEsM\",\"inputText\":\"css_inputText__jgW8c\",\"iconsTitle\":\"css_iconsTitle__P-e9i\",\"inputList\":\"css_inputList__wP6SV\",\"realRadio\":\"css_realRadio__qSuHP\",\"backgroundList\":\"css_backgroundList__Te0Cn\",\"backgroundItem\":\"css_backgroundItem__0WdhH\",\"btn\":\"css_btn__UXXoS\",\"svgOff\":\"css_svgOff__QNw+T\",\"svgOn\":\"css_svgOn__oirzr\",\"imgOn\":\"css_imgOn__R226T\",\"imgOff\":\"css_imgOff__KZgkN\",\"backgroundListItem\":\"css_backgroundListItem__8xs3D\",\"closeBtn\":\"css_closeBtn__lmEQX\"};","import css from '../NewBoard/css.module.css'\r\nimport sprite from '../../../images/sprite.svg'\r\nimport { useState } from 'react'\r\nimport backimg from '../../../json/icon.json';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addDesk } from '../../../redux/desk/deskOperations';\r\nimport { getUserId } from '../../../redux/auth/authSelector';\r\n\r\n\r\nconst NewBoard = ({ close }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [title, setTitle] = useState('')\r\n    const [icons, setIcons] = useState('icon_1');\r\n    const [backImg, setBackImg] = useState('id-0');\r\n\r\n    const ownerUser = useSelector(getUserId);\r\n\r\n    const handleClose = () => {\r\n        close()\r\n    }\r\n    const onFormChange = e => {\r\n    const { name, value, id } = e.target;\r\n    switch (name) {\r\n      case 'title':\r\n        setTitle(value);\r\n        break;\r\n      case 'icons':\r\n        setIcons(id);\r\n            break;\r\n      case 'backgrounds':\r\n        setBackImg(id);\r\n        break;\r\n      default:\r\n        throw new Error('There has been a mistake. Try again, please.');\r\n    }\r\n    };\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        const newDesk = { title: title, ownerUser:ownerUser, icon:icons, background: backImg };\r\n        dispatch(addDesk(newDesk));\r\n\r\n        setTitle('');\r\n        setIcons('');\r\n        setBackImg('id-0');\r\n        close()\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className={css.modal}>\r\n            <svg onClick={handleClose} className={css.closeBtn} width=\"18\" height=\"18\">\r\n        <use  href = {sprite + '#icon-x'}></use>\r\n        </svg>\r\n            <h3 className={css.title}>New Board</h3>\r\n            <form onSubmit={onFormSubmit}>\r\n                <input onChange={onFormChange} className={css.inputText} value={title} type=\"text\" name=\"title\" id=\"title\" placeholder='Title' />\r\n                <h3 className={css.iconsTitle}>Icons</h3>\r\n                <ul className={css.inputList}>\r\n                    \r\n                    <li>\r\n                        <label htmlFor=\"icon_1\">\r\n                    <svg className={(icons==='icon_1')?css.svgOn:css.svgOff} width='18' height='18' fill=\"none\" stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_1'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_1\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_2\">\r\n                    <svg className={(icons==='icon_2')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_2'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_2\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_3\">\r\n                    <svg className={(icons==='icon_3')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_3'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_3\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_4\">\r\n                    <svg className={(icons==='icon_4')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_4'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_4\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_5\">\r\n                    <svg className={(icons==='icon_5')?css.svgOn:css.svgOff} width='18' height='18'  stroke=\"var(--filterModalText)\">\r\n                        <use href={sprite + '#icon_5'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_5\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_6\">\r\n                    <svg className={(icons==='icon_6')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\r\n                        <use href={sprite + '#icon_6'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_6\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_7\">\r\n                    <svg className={(icons==='icon_7')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\r\n                        <use href={sprite + '#icon_7'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_7\" />\r\n                </label>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"icon_8\">\r\n                    <svg className={(icons==='icon_8')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\r\n                        <use href={sprite + '#icon_8'}></use>\r\n                    </svg>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_8\" />\r\n                </label>\r\n                    </li>\r\n                </ul>\r\n                <h3 className={css.iconsTitle}>Background</h3>\r\n                <ul className={css.backgroundList}>\r\n                    {backimg.map(({url,id})=>(<li className={css.backgroundListItem} key={id}>\r\n                        <label htmlFor={id}>\r\n                    <img className={(backImg===`${id}`)?css.imgOn:css.imgOff} src={url} alt='img' width='28'></img>\r\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name='backgrounds' id={id} />\r\n                        </label>\r\n                    </li>))}\r\n                </ul>\r\n                <button className={css.btn}>Create</button>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBoard;\r\n\r\n","import { useImperativeHandle, useState, forwardRef } from \"react\";\r\nimport Modal from \"../Modal\"\r\nimport NewBoard from \"./NewBoard\";\r\nconst NewBoardModal = (_,ref) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n    setShowModal(false);\r\n    }\r\n    useImperativeHandle(ref, () => ({ openModal }));\r\n    return (\r\n        <>\r\n            {showModal&&<Modal close={closeModal}>\r\n                <NewBoard close={closeModal} />\r\n\r\n                </Modal>}\r\n        </>\r\n    )\r\n}\r\nexport default forwardRef(NewBoardModal);","import {\r\n  CreateBoardBtnElement,\r\n  CreateBoardBtnText,\r\n  Btn,\r\n} from \"./CreateBoard.Styled\";\r\nimport NewBoardModal from \"../../Modals/NewBoard/NewBoardModal\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const CreateBoardBtn = () => {\r\n\r\n  const newBoardModalRef = useRef(null);\r\n  \r\n  const openNewBoardModal = () => {\r\n    if (newBoardModalRef.current) {\r\n      newBoardModalRef.current.openModal()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CreateBoardBtnElement>\r\n      <CreateBoardBtnText>\r\n        Create a <br />\r\n        new board\r\n      </CreateBoardBtnText>\r\n      <Btn onClick={openNewBoardModal}>\r\n        <svg width=\"20\" height=\"20\" stroke=\"black\">\r\n          <use href={sprite + `#icon-plus`}></use>\r\n        </svg>\r\n      </Btn>\r\n      <NewBoardModal ref={newBoardModalRef} />\r\n    </CreateBoardBtnElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const BoardsElement = styled.div`\r\n  /* padding-top: 24px; */\r\n  padding-right: 0px;\r\n  // padding-bottom: 40px;\r\n`;\r\n\r\n\r\nexport const BoardsTitle = styled.h2`\r\n  padding-left: 24px;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  opacity: 0.5;\r\n  margin-bottom: 8px;\r\n  color: var(--myBoards);\r\n`;\r\n\r\n\r\nexport const BoardsList = styled.ul`\r\n  margin-top: 4px;\r\n  /* border: 1px solid var(--boarder); */\r\n  padding-top:40px;\r\n  padding-bottom:40px;\r\n  height:206px;\r\n  overflow-block: scroll;\r\n`;\r\n\r\n\r\nexport const BoardsItem = styled.li`\r\n  display: flex;\r\n  height:61px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: var(--contrastColor);\r\n  /* border: 1px solid white; */\r\n  padding: 20px 24px 20px 24px;\r\n  /* opacity: 0.5; */\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  &:focus{\r\n    background-color: var(--prOfBg)\r\n  };\r\n  // &:first-child {\r\n  //   background-color: var(--prOfBg);\r\n  // }\r\n`;\r\n\r\n\r\nexport const ProjectsBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n`;\r\n\r\n\r\nexport const ProjectSVG = styled.svg`\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const BtnsSVGBox = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const BtnsSVG = styled.button`\r\n  margin-left: 8px;\r\n  background-color: var(--sidebarColor);\r\n  border: none;\r\n  padding: 0;\r\n`;\r\n\r\n","import { useDispatch } from \"react-redux\"\r\nimport { deleteDesk, setActiveDeskId } from \"../../../redux/desk/deskOperations\";\r\nimport { BoardsItem, BtnsSVG, BtnsSVGBox, ProjectSVG, ProjectsBox } from \"./Boards.Styled\";\r\nimport sprite from '../../../images/sprite.svg'\r\n\r\nexport const DesksListItem = ({ _id, icon, title }) => {\r\n\r\n  const dispatch = useDispatch();\r\n    const handleDeleteDesk = deskId => {\r\n            dispatch(deleteDesk(deskId));\r\n  }\r\n  \r\n\r\n  \r\n  const handleClickActiveDeskId = (deskId) => {\r\n    dispatch(setActiveDeskId(deskId));\r\n  };\r\n\r\n  return (\r\n      \r\n        <BoardsItem>\r\n            <ProjectsBox onClick={()=>handleClickActiveDeskId(_id)}>\r\n                <ProjectSVG\r\n                width=\"18\"\r\n                height=\"18\"\r\n                stroke=\"var(--contrastColor)\">\r\n                <use href={sprite + `#${icon}`}></use>\r\n                </ProjectSVG>\r\n                <span>{title}</span>\r\n            </ProjectsBox>\r\n            <BtnsSVGBox>\r\n                <BtnsSVG>\r\n                    <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                stroke=\"var(--myBoards)\"\r\n              >\r\n                <use href={sprite + `#icon-Icon-pencil`}></use>\r\n              </svg>\r\n                </BtnsSVG>\r\n                <BtnsSVG>\r\n                    <svg\r\n                        onClick={()=>handleDeleteDesk(_id)}\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"var(--prOfBg)\"\r\n                stroke=\"var(--myBoards)\"\r\n              >\r\n                <use href={sprite + `#icon-trash-04`}></use>\r\n              </svg>\r\n                </BtnsSVG>\r\n            </BtnsSVGBox>\r\n        </BoardsItem>\r\n    )\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDesks, selectVisibleDesks } from \"../../../redux/desk/deskSelectors\";\r\nimport { selectBackImg } from \"../../../redux/filter/filterSelectors\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchDesks } from \"../../../redux/desk/deskOperations\";\r\nimport { DesksListItem } from \"./BoardListItem\";\r\nimport { BoardsList } from \"./Boards.Styled\";\r\n\r\nconst DesksList = () => {\r\n    const dispatch = useDispatch();\r\n    const visibleDesks = useSelector(selectVisibleDesks);\r\n    const desks = useSelector(selectDesks);\r\n    const filterValue = useSelector(selectBackImg);\r\n  \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchDesks())\r\n    }, [dispatch]);\r\n  \r\n  \r\n\r\n    return (\r\n        <BoardsList>\r\n            {visibleDesks.length > 0 ? (\r\n        visibleDesks.map(desk => (\r\n          <DesksListItem key={desk._id} {...desk}/>\r\n        ))\r\n      ) : filterValue && desks ? (\r\n        <div></div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n        </BoardsList>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default DesksList;","import { CreateBoardBtn } from \"../CreateBoard/CreateBoard\";\r\nimport {\r\n  BoardsElement,\r\n  BoardsTitle,\r\n  // BoardsList,\r\n  BoardsItem,\r\n  ProjectsBox,\r\n  ProjectSVG,\r\n  BtnsSVGBox,\r\n  BtnsSVG,\r\n} from \"./Boards.Styled\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport BoardsList from \"./BoardList\";\r\n\r\nexport const Boards = () => {\r\n  return (\r\n    <BoardsElement>\r\n      <BoardsTitle>My boards</BoardsTitle>\r\n      <CreateBoardBtn />\r\n      <BoardsList/>\r\n      {/* <BoardsList>\r\n        <BoardsItem>\r\n          <ProjectsBox>\r\n            <ProjectSVG\r\n              width=\"18\"\r\n              height=\"18\"\r\n              fill=\"var(--prOfBg)\"\r\n              stroke=\"var(--contrastColor)\"\r\n            >\r\n              <use href={sprite + `#icon-Project`}></use>\r\n            </ProjectSVG>\r\n            <span>Project office</span>\r\n          </ProjectsBox>\r\n\r\n          <BtnsSVGBox>\r\n            <BtnsSVG>\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"var(--prOfBg)\"\r\n                stroke=\"var(--myBoards)\"\r\n              >\r\n                <use href={sprite + `#icon-Icon-pencil`}></use>\r\n              </svg>\r\n            </BtnsSVG>\r\n            <BtnsSVG>\r\n              <svg\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"var(--prOfBg)\"\r\n                stroke=\"var(--myBoards)\"\r\n              >\r\n                <use href={sprite + `#icon-trash-04`}></use>\r\n              </svg>\r\n            </BtnsSVG>\r\n          </BtnsSVGBox>\r\n        </BoardsItem>\r\n        <BoardsItem>Neon Light Project</BoardsItem>\r\n      </BoardsList> */}\r\n    </BoardsElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const HelpElement = styled.div`\r\n  /* border: 1px solid white; */\r\n  margin-left: 24px;\r\n  margin-right: 24px;\r\n  padding: 20px;\r\n  background-color: var(--needHelpBg);\r\n  border-radius: 8px;\r\n`;\r\nexport const IMG = styled.img`\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n`;\r\n\r\nexport const TextSpan = styled.span`\r\n  color: var(--accentColor);\r\n`;\r\n\r\nexport const HelpBtn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  margin-top: 18px;\r\n  font-size: 12px;\r\n  background-color: var(--needHelpBg);\r\n  border: none;\r\n  cursor:pointer;\r\n`;\r\n\r\nexport const HelpText = styled.p`\r\n  font-family: Poppins;\r\n  margin-left: 8px;\r\n  font-size: 12px;\r\n  color: var(--contrastColor);\r\n  font-weight: var(--fontWeight500);\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-size: 18px;\r\n  font-family: 'Poppins';\r\n  font-weight: 500;\r\n  letter-spacing: -0.36px;\r\n  margin-bottom: 24px;\r\n  color: var(--filterModalTitle);\r\n  \r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  align-items: start;\r\n  margin-bottom: 24px;\r\n\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  align-items: start;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 14px;\r\n  border: none;\r\n  border-radius: 8px;\r\n\r\n  font-family: 'Poppins';\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  letter-spacing: -0.28px;\r\n\r\n  color: #161616;\r\n  background-color: #BEDBB0;\r\n\r\n  \r\n  cursor: pointer;\r\n\r\n  \r\n`;\r\n\r\nexport const TitleInput = styled(Field)`\r\n  width: 100%;\r\n  height: 49px;\r\n  padding: 14px 18px;\r\n\r\n  font-size: 14px;\r\n  font-family: 'Poppins';\r\n  letter-spacing: -0.28px;\r\n  color: var(--filterModalTitle);\r\n  background-color: var(--backgroundInput);\r\n  border: 1px solid rgba(190, 219, 176, 0.5);\r\n  border-radius: 8px;\r\n  outline: none;\r\n\r\n \r\n\r\n  &::placeholder {\r\n    color: var(--filterModalText);\r\n    font-size: 14px;\r\n    font-family: 'Poppins';\r\n    letter-spacing: -0.28px;\r\n    \r\n\r\n  }\r\n`;\r\n\r\nexport const Textarea = styled(Field)`\r\n  resize: vertical;\r\n  width: 100%;\r\n  height: 120px;\r\n  padding: 14px 18px;\r\n  color: var(--filterModalTitle);\r\n  font-size: 14px;\r\n  font-family: 'Poppins';\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  letter-spacing: -0.28px;\r\n  \r\n  background-color: var(--backgroundInput);\r\n  border: 1px solid rgba(190, 219, 176, 0.5);\r\n  outline: none;\r\n  border-radius: 8px;\r\n\r\n  \r\n\r\n  margin-top: 14px;\r\n\r\n  &::placeholder {\r\n    color: var(--filterModalText);\r\n    font-size: 14px;\r\n    font-family: 'Poppins';\r\n    font-weight: 400;\r\n    line-height: normal;\r\n    letter-spacing: -0.28px;\r\n    \r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\nexport const ErrorSection = styled(ErrorMessage)`\r\n  padding-left: 14px;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-family: Poppins;\r\n  font-weight: 500;\r\n  letter-spacing: -0.36px;\r\n`;\r\n\r\nexport const ModalForm = styled(Form)`\r\n  margin: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n`;\r\nexport const ModalField = styled.div`\r\n  padding: 24px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  height: 355px;\r\n  border: 1px solid rgba(190, 219, 176, 0.5);\r\n  background-color: var(--themeBgColor);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  \r\n`;\r\n\r\nexport const CloseModal = styled.svg`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 14px;\r\n  \r\n  width: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n  `\r\n\r\n\r\n  \r\n\r\n","import React from 'react';\r\nimport {\r\n  FormWrapper,\r\n  Section,\r\n  SubmitButton,\r\n  TitleInput,\r\n  SectionTitle,\r\n  Textarea,\r\n  ModalForm,\r\n  ErrorSection,\r\n  ModalField,\r\n  CloseModal,\r\n} from \"../NeedHelp/NeedHelp.Styled\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport sprite from '../../../images/sprite.svg';\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email('Invalid email').required('Email is required'),\r\n  comment: Yup.string().min(7).max(230).required('Comment is required'),\r\n});\r\nconst initialValues = {\r\n  email: '',\r\n  comment: '',\r\n};\r\n\r\nconst NeedHelp = ({close}) => {\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    resetForm();\r\n    close();\r\n    \r\n  };\r\n  const handleClose = () => {\r\n    close();\r\n}\r\n  \r\n\r\n  return (\r\n    <ModalField >\r\n    <CloseModal onClick={handleClose}>\r\n     <use href={sprite + '#icon-x'} width={18} height={18} />\r\n    </CloseModal>\r\n    <Section>\r\n    <SectionTitle>Need help</SectionTitle>\r\n    \r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <ModalForm>\r\n          <FormWrapper>\r\n            <ErrorSection name=\"email\" />\r\n            <TitleInput\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email address \"\r\n              \r\n            />\r\n            <ErrorSection name=\"comment\" />\r\n            <Textarea\r\n              type=\"text\"\r\n              name=\"comment\"\r\n              placeholder=\"Comment\"\r\n              \r\n            />\r\n          </FormWrapper>\r\n          <SubmitButton type=\"submit\">Send</SubmitButton>\r\n        </ModalForm>\r\n      </Formik>\r\n    </Section>\r\n    </ModalField>\r\n  );\r\n};\r\n\r\n\r\nexport default NeedHelp;\r\n\r\n\r\n","import { useImperativeHandle, useState, forwardRef } from \"react\";\r\nimport Modal from \"../Modal\"\r\nimport NeedHelp from \"./NeedHelp\";\r\n\r\n\r\nconst HelpModal = (_,ref) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n    setShowModal(false);\r\n    }\r\n    useImperativeHandle(ref, () => ({ openModal }));\r\n    return (\r\n        <>\r\n            {showModal&&<Modal close={closeModal}>\r\n            <NeedHelp close={closeModal}/>\r\n                </Modal>}\r\n        </>\r\n    )\r\n}\r\nexport default forwardRef(HelpModal);\r\n\r\n","import {\r\n  HelpElement,\r\n  IMG,\r\n  Text,\r\n  TextSpan,\r\n  HelpBtn,\r\n  HelpText,\r\n} from \"./CustomerSupport.Styled\";\r\nimport img from \"../../../images/flowerpot.png\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport HelpModal from \"../../Modals/NeedHelp/NeedHelpModal\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const CustomerSupport = () => {\r\n  const helpModalRef = useRef(null);\r\n\r\n  const openHelpModal = () => {\r\n    if (helpModalRef.current) {\r\n      helpModalRef.current.openModal()\r\n    }\r\n  }\r\n  return (\r\n    <HelpElement>\r\n      <IMG src={img} alt=\"flowerpot\" height=\"78\" width=\"54\" />\r\n      <Text>\r\n        If you need help with <TextSpan>TaskPro</TextSpan>, check out our\r\n        support resources or reach out to our customer support team.\r\n      </Text>\r\n      <HelpBtn onClick={openHelpModal}>\r\n        <svg width=\"20\" height=\"20\" stroke=\"var(--contrastColor)\" fill=\"var(--needHelpBg)\">\r\n          <use href={sprite + `#icon-help-circle`}></use>\r\n        </svg>\r\n        <HelpText>Need Help?</HelpText>\r\n      </HelpBtn>\r\n      <HelpModal ref={helpModalRef} />\r\n    </HelpElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const LogoutElement = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  /* font-family: Poppins; */\r\n  margin-left: 24px;\r\n  margin-top: 24px;\r\n`;\r\n\r\nexport const LogoutBtn = styled.button`\r\n  padding: 0;\r\n  font-family: Poppins;\r\n  background-color: var(--sidebarColor);\r\n  color: var(--logOut);\r\n  border: none;\r\n  font-size: 16px;\r\n  margin-left: 14px;\r\n  font-weight: 500;\r\n`;\r\n","import { LogoutElement, LogoutBtn } from \"./LogOut.Styled\";\r\nimport sprite from \"../../../images/sprite.svg\";\r\nimport Notiflix from \"notiflix\";\r\nimport { logOut } from \"../../../redux/auth/authOperation\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const LogOut = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickLogOut = () => {\r\n    Notiflix.Confirm.init({\r\n      width: \"300px\",\r\n      position: \"center-top\",\r\n      fontFamily: \"Poppins\",\r\n      titleColor: \"#bedbb0\",\r\n      okButtonBackground: \"#bedbb0\",\r\n    });\r\n    Notiflix.Confirm.show(\r\n      \"Confirmation\",\r\n      \"Are you sure you want to log out?\",\r\n      \"Yes\",\r\n      \"No\",\r\n      () => {\r\n        dispatch(logOut());\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n  return (\r\n    <LogoutElement>\r\n      <svg width=\"32\" height=\"32\">\r\n        <use href={sprite + `#icon-login`}></use>\r\n      </svg>\r\n      <LogoutBtn onClick={handleClickLogOut} type=\"button\">\r\n        Log out\r\n      </LogoutBtn>\r\n    </LogoutElement>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  background-color: var(--sidebarColor);\r\n  color: var(--contrastColor);\r\n  flex-basis: 260px;\r\n\r\n  /* border: 1px solid red; */\r\n`;\r\n\r\n","import { Logo } from \"./Logo/Logo\";\r\nimport { Boards } from \"./Boards/Boards\";\r\nimport { CustomerSupport } from \"./CustomerSupport/CustomerSupport\";\r\nimport { LogOut } from \"./LogOut/LogOut\";\r\nimport { Section } from \"./SideBar.Styled\";\r\n\r\nexport const Sidebar = () => {\r\n  return (\r\n    <Section>\r\n      <Logo />\r\n      <Boards />\r\n      <CustomerSupport />\r\n      <LogOut />\r\n    </Section>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.div`\r\n  font-family: Poppins;\r\n  display: flex;\r\n  height: 770px;\r\n  max-width: 1440px;\r\n  /* padding: 0; */\r\n  margin: 0 auto;\r\n  box-sizing: border-box;\r\n\r\n  /* @media screen and (min-width: 375px) {\r\n    max-width: 375px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 768px;\r\n    padding: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    max-width: 1440px;\r\n    padding: 0;\r\n  } */\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Header } from \"../../components/Header/Header\";\r\nimport { Sidebar } from \"../../components/Sidebar/Sidebar\";\r\nimport { ScreensPage } from \"../ScreensPage/ScreensPage\";\r\nimport { Section, Main } from \"./HomePage.Styled\";\r\nimport BurgerMenu from \"../../components/BurgerMenu/BurgerMenu\";\r\n\r\nconst HomePage = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      {isSidebarOpen && windowWidth <= 1439 && <Sidebar />}\r\n      {windowWidth >= 1440 && <Sidebar />}\r\n      <Main>\r\n        <Header openSideBar={toggleSidebar} />\r\n        <ScreensPage />\r\n      </Main>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["UserInfoBox","styled","span","_templateObject","_taggedTemplateLiteral","div","_templateObject2","UserName","p","_templateObject3","UserAvatar","img","_templateObject4","EditProfileForm","form","EditProfileTitle","h2","EditProfileImg","FileWrapper","Foto","input","_templateObject5","EditFoto","svg","_templateObject6","EditCloseBtn","button","_templateObject7","EditProfileInput","_templateObject8","PasswordWrapper","_templateObject9","ToggleShowPasword","_templateObject10","BtnEditProfile","_templateObject11","_ref","modalClose","userAvatar","useSelector","getAvatar","userName","getName","userEmail","getUserEmail","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","selectedAvatar","setSelectedAvatar","dispatch","useDispatch","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_yield$axios$patch","data","formData","wrap","_context","prev","next","preventDefault","target","name","value","trim","updateName","Notify","success","t0","console","log","email","updateEmail","t1","password","axios","patch","sent","message","t2","FormData","append","updateAvatar","t3","stop","_x","apply","arguments","_jsxs","onSubmit","encType","children","_jsx","type","onClick","width","height","stroke","href","sprite","src","userTemp","alt","accept","onChange","files","info","placeholder","minLength","maxLength","prevShowPassword","BsEyeSlash","color","style","BsEye","UserInfo","isModalOpen","setIsModalOpen","avatarURL","_Fragment","EditProfile","UserSection","HeaderSection","header","Container","Title","Wrapper","List","ul","props","isOpen","Item","li","themes","ThemeSelect","isSelectOpen","setIsSelectOpen","selectedTheme","setSelectedTheme","localTheme","selectGetTheme","useEffect","document","body","classList","remove","add","IoIosArrowDown","size","map","theme","setTheme","updateTheme","setTimeout","Button","Svg","openSideBar","xlinkHref","concat","url","Header","BurgerMenu","LogoElement","LogoTitle","h1","Logo","CreateBoardBtnElement","CreateBoardBtnText","Btn","close","title","setTitle","icons","setIcons","_useState5","_useState6","backImg","setBackImg","ownerUser","getUserId","onFormChange","_e$target","id","Error","className","css","newDesk","icon","background","addDesk","htmlFor","fill","backimg","NewBoardModal","_","ref","showModal","setShowModal","openModal","closeModal","useImperativeHandle","Modal","NewBoard","forwardRef","CreateBoardBtn","newBoardModalRef","useRef","current","BoardsElement","BoardsTitle","BoardsList","BoardsItem","ProjectsBox","ProjectSVG","BtnsSVGBox","BtnsSVG","DesksListItem","_id","deskId","setActiveDeskId","deleteDesk","visibleDesks","selectVisibleDesks","selectDesks","selectBackImg","fetchDesks","length","desk","_objectSpread","Boards","HelpElement","IMG","Text","TextSpan","HelpBtn","HelpText","SectionTitle","FormWrapper","Section","SubmitButton","TitleInput","Field","Textarea","ErrorSection","ErrorMessage","ModalForm","Form","ModalField","CloseModal","validationSchema","Yup","shape","required","comment","min","max","initialValues","Formik","values","resetForm","HelpModal","NeedHelp","CustomerSupport","helpModalRef","LogoutElement","LogoutBtn","LogOut","Notiflix","init","position","fontFamily","titleColor","okButtonBackground","show","logOut","section","Sidebar","Main","window","innerWidth","windowWidth","setWindowWidth","isSidebarOpen","setIsSidebarOpen","handleResize","addEventListener","removeEventListener","ScreensPage"],"sourceRoot":""}