{"version":3,"file":"static/js/307.c8201f8e.chunk.js","mappings":"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","sources":["components/Header/UserInfo/UserInfo.Styled.js","components/Modals/EditProfile/EditProfile.Styled.js","components/Modals/EditProfile/EditProfile.jsx","components/Header/UserInfo/UserInfo.jsx","components/Header/Header.Styled.js","components/Header/ThemeSelect/ThemeSelect.Styled.js","components/Header/ThemeSelect/ThemeSelect.jsx","components/BurgerMenu/BurgerMenu.Styled.js","components/BurgerMenu/BurgerMenu.jsx","components/Header/Header.jsx","components/Sidebar/Logo/Logo.Styled.js","components/Sidebar/Logo/Logo.jsx","components/Sidebar/CreateBoard/CreateBoard.Styled.js","webpack://project-myerrand08/./src/components/Modals/NewBoard/css.module.css?950a","components/Modals/NewBoard/NewBoard.jsx","components/Modals/NewBoard/NewBoardModal.js","components/Sidebar/CreateBoard/CreateBoard.jsx","components/Sidebar/Boards/Boards.Styled.js","components/Modals/EditDeskModal/EditBoard.jsx","components/Modals/EditDeskModal/EditBoardModal.js","components/Sidebar/Boards/BoardListItem.jsx","components/Sidebar/Boards/BoardList.jsx","components/Sidebar/Boards/Boards.jsx","components/Sidebar/CustomerSupport/CustomerSupport.Styled.js","components/Modals/NeedHelp/NeedHelp.Styled.js","components/Modals/NeedHelp/NeedHelp.jsx","components/Modals/NeedHelp/NeedHelpModal.jsx","components/Sidebar/CustomerSupport/CustomerSupport.jsx","components/Sidebar/LogOut/LogOut.Styled.js","components/Sidebar/LogOut/LogOut.jsx","components/Sidebar/SideBar.Styled.js","components/Sidebar/Sidebar.jsx","page/HomePage/HomePage.Styled.js","page/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.span`\n  margin-right: 8px;\n  font-size: 14px;\n`;\nexport const UserInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 8px;\n`;\n\nexport const UserName = styled.p`\n  font-family: var(--poppinsFont);\n  font-weight: var(--fontWeight500);\n  font-size: var(--fontSize14);\n  margin-left: 14px;\n  cursor: pointer;\n  color: var(--userNameColor);\n  &:hover {\n    color: var(--accentColor);\n  }\n`;\n\nexport const UserAvatarBox = styled.div`\n  border-radius: 8px;\n  cursor: pointer;\n  height: 32px;\n  width: 32px;\n  overflow: hidden;\n`;\n\nexport const UserAvatar = styled.img`\n  height: 32px;\n  width: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const EditProfileForm = styled.form`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  padding: 24px;\n  height: 440px;\n  border-width: 1px;\n  border-color: #bedbb080;\n  border-style: solid;\n  border-radius: 8px;\n  background-color: var(--modalBg);\n  z-index: 1;\n  box-shadow: 0px 4px 16px 0px #1616160d;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const EditProfileTitle = styled.h2`\n  color: var(--modalTitle);\n  font-size: 18px;\n  margin-bottom: 24px;\n`;\n\nexport const EditProfileImg = styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 25px;\n  cursor: pointer;\n  border-radius: 8px;\n`;\n\nexport const EditProfileSvg = styled.svg`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 25px;\n`;\n\nexport const FileWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 130px;\n  transform: translate(-50%, 0);\n  background-color: var(--modalEditPlusFoto);\n  width: 24px;\n  height: 24px;\n  border-radius: 8px;\n`;\n\nexport const Foto = styled.input`\n  width: 24px;\n  height: 24px;\n  background-color: #bedbb0;\n  border-style: none;\n  border-radius: 8px;\n  opacity: 0;\n`;\n\n/** export const EditFotoBtn = styled.div`\n    width: 24px;\n    height: 24px;\n    background-color: var(--modalEditPlusFoto);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 8px;\n    `;\n    */\n\nexport const EditFoto = styled.svg`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const EditCloseBtn = styled.button`\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  width: 30px;\n  height: 30px;\n  border-style: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const EditProfileInput = styled.input`\n  padding: 14px 18px;\n  margin-bottom: 14px;\n  width: 100%;\n  height: 49px;\n  border: 1px solid var(--modalInputBorder);\n  border-radius: 8px;\n  background-color: var(--modalInputBg);\n  color: var(--modalInputTxt);\n  font-family: var(--poppinsFont);\n  font-size: var(--fontSize14);\n\n  outline: none;\n\n  &::placeholder {\n    font-size: var(--fontSize14);\n  }\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ToggleShowPasword = styled.span`\n  position: absolute;\n  top: 16px;\n  right: 18px;\n  height: 18px;\n  cursor: pointer;\n`;\n\nexport const BtnEditProfile = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 10px;\n  margin-bottom: 24px;\n  background-color: var(--modalAccentBtnBg);\n  border-radius: 8px;\n  cursor: pointer;\n  color: var(--modalAccentBtnTxt);\n  font-family: var(--poppinsFont);\n  font-weight: var(--fontWeight500);\n  border: none;\n  transition: var(--transition);\n\n  &:hover {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getAvatar, getName, getUserEmail } from '../../../redux/auth/authSelector';\n\nimport {\n  EditProfileForm,\n  EditProfileInput,\n  BtnEditProfile,\n  EditProfileTitle,\n  EditProfileImg,\n  EditCloseBtn,\n  ToggleShowPasword,\n  PasswordWrapper,\n  Foto,\n  EditFoto,\n  FileWrapper,\n  EditProfileSvg,\n} from './EditProfile.Styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useState } from 'react';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport axios from 'axios';\nimport { Notify } from 'notiflix';\nimport { updateAvatar, updateEmail, updateName } from '../../../redux/auth/authOperation';\n\nconst EditProfile = ({ modalClose }) => {\n  const userAvatar = useSelector(getAvatar);\n  const userName = useSelector(getName);\n  const userEmail = useSelector(getUserEmail);\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleAvatarChange = async e => {\n    const formData = new FormData();\n    formData.append('avatar', e.target.files[0]);\n    await dispatch(updateAvatar(formData));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (e.target.name.value.trim()) {\n      try {\n        await dispatch(updateName(e.target.name.value.trim()));\n        Notify.success('Name changed');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (e.target.email.value.trim()) {\n      try {\n        await dispatch(updateEmail(e.target.email.value.trim()));\n        Notify.success('Email changed');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (e.target.password.value.trim()) {\n      try {\n        const { data } = await axios.patch('/users/password', {\n          password: e.target.password.value.trim(),\n        });\n        Notify.success(data.message);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    modalClose();\n  };\n\n  return (\n    <EditProfileForm onSubmit={handleSubmit} encType=\"multipart/form-data\">\n      <EditProfileTitle>Edit profile</EditProfileTitle>\n      <EditCloseBtn\n        type=\"button\"\n        onClick={() => {\n          modalClose();\n        }}\n      >\n        <svg width=\"18\" height=\"18\" stroke=\"var(--modalCloseIcon)\">\n          <use href={sprite + '#icon-x'}></use>\n        </svg>\n      </EditCloseBtn>\n      {!userAvatar && (\n        <EditProfileSvg width=\"68\" height=\"68\">\n          <use href={sprite + `#icon-user`}></use>\n        </EditProfileSvg>\n      )}\n      {userAvatar && <EditProfileImg src={userAvatar} alt=\"user_icon\" width={68} height={68} />}\n      <FileWrapper>\n        <Foto type=\"file\" accept=\"image/*,.png,.jpg,.gif,.web\" onChange={handleAvatarChange}></Foto>\n        <EditFoto width=\"10\" height=\"10\" stroke=\"black\">\n          <use href={sprite + '#icon-plus'}></use>\n        </EditFoto>\n      </FileWrapper>\n      <EditProfileInput type=\"text\" name=\"name\" placeholder={userName}></EditProfileInput>\n      <EditProfileInput type=\"email\" name=\"email\" placeholder={userEmail}></EditProfileInput>\n      {/* pattern=\"/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\" */}\n      <PasswordWrapper>\n        <EditProfileInput\n          type={showPassword ? 'text' : 'password'}\n          name=\"password\"\n          placeholder=\"Password\"\n          minLength=\"8\"\n          maxLength=\"64\"\n        ></EditProfileInput>\n        <ToggleShowPasword onClick={togglePasswordVisibility}>\n          {showPassword ? (\n            <BsEyeSlash color=\"var(--modalSmallTitle)\" style={{ width: 18, height: 18 }} />\n          ) : (\n            <BsEye color=\"var(--modalSmallTitle)\" style={{ width: 18, height: 18 }} />\n          )}\n        </ToggleShowPasword>\n      </PasswordWrapper>\n      <BtnEditProfile type=\"submit\">Send</BtnEditProfile>\n    </EditProfileForm>\n  );\n};\n\nexport default EditProfile;\n","import { UserInfoBox, UserName, UserAvatar, UserAvatarBox } from './UserInfo.Styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { getName, getAvatar } from '../../../redux/auth/authSelector';\n\nimport { useState } from 'react';\nimport EditProfile from '../../Modals/EditProfile/EditProfile';\n\nexport const UserInfo = () => {\n  const userName = useSelector(getName);\n  const userAvatar = useSelector(getAvatar);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const modalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const modalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <UserInfoBox>\n        <UserName>{userName}</UserName>\n        {!userAvatar && (\n          <UserAvatarBox>\n            <svg width=\"32\" height=\"32\" onClick={modalOpen}>\n              <use href={sprite + `#icon-user`}></use>\n            </svg>\n          </UserAvatarBox>\n        )}\n        {userAvatar && (\n          <UserAvatarBox src={userAvatar} alt=\"user_icon\">\n            <UserAvatar src={userAvatar} alt=\"user_icon\" onClick={modalOpen}></UserAvatar>\n          </UserAvatarBox>\n        )}\n      </UserInfoBox>\n      {isModalOpen && <EditProfile modalClose={modalClose} />}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const UserSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const HeaderSection = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 18px 24px 18px 24px;\n  /* border: 1px solid red; */\n  /* max-width: 100%; */\n  /* height: 68px; */\n  background-color: var(--headerColor);\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  margin-right: 14px;\n`;\n\nexport const Title = styled.p`\n  font-size: var(--fontSize14);\n  font-family: var(--poppinsFont);\n  font-weight: var(--fontWeight500);\n  letter-spacing: -0.28px;\n  color: var(--themeTitle);\n  cursor: pointer;\n  :hover {\n    color: var(--accentColor);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  cursor: pointer;\n`;\n\nexport const List = styled.ul`\n  position: absolute;\n  opacity: ${(props) => (props.isOpen ? '1' : '0')};\n  transform: translateY(${(props) => (props.isOpen ? '0' : '-10px')});\n  transition: opacity 0.2s, transform 0.3s;\n  pointer-events: ${(props) => (props.isOpen ? 'visible' : 'none')};\n\n  display: flex;\n  padding: 18px 44px 18px 18px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: var(--borderRadius8);\n  background-color: var(--themeBgColor);\n  box-shadow: 0px 4px 16px 0px var(--themeBoxShadow);\n\n  gap: 8px;\n  top: 19px;\n  left: 0px;\n  z-index: 999;\n`;\n\nexport const Item = styled.li`\n  cursor: pointer;\n  color: var(--themeItem);\n  transition: color 0.4s;\n  :hover {\n    color: var(--accentColor);\n  }\n`;","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTheme } from \"../../../redux/theme/themeSlice\";\nimport { updateTheme } from \"../../../redux/auth/authOperation\";\nimport { Container, Title, Wrapper, List, Item } from \"./ThemeSelect.Styled\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { selectGetTheme } from \"../../../redux/auth/authSelector\";\n\nconst themes = [\n  { name: \"Light\", value: \"light\" },\n  { name: \"Dark\", value: \"dark\" },\n  { name: \"Violet\", value: \"violet\" },\n];\n\nexport const ThemeSelect = () => {\n  const dispatch = useDispatch();\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState(\"dark\");\n  const localTheme = useSelector(selectGetTheme);\n\n  useEffect(() => {\n    document.body.classList.remove(\"light-theme\", \"dark-theme\", \"violet-theme\");\n    document.body.classList.add(selectedTheme + \"-theme\");\n  }, [selectedTheme]);\n\n  const handleThemeToggle = (theme) => {\n    dispatch(setTheme(theme));\n    dispatch(updateTheme(theme));\n    setTimeout(() => {\n      setSelectedTheme(theme);\n    }, 10);\n    setIsSelectOpen(false);\n  };\n\n  useEffect(() => {\n    if (!localTheme) {\n      return;\n    }\n\n    setSelectedTheme(localTheme);\n  }, [localTheme]);\n\n  return (\n    <Container isOpen={isSelectOpen}>\n      <Wrapper onClick={() => setIsSelectOpen(!isSelectOpen)}>\n        <Title>Theme</Title>\n        <IoIosArrowDown size={16} color=\"var(--themeTitle)\" />\n      </Wrapper>\n      <List isOpen={isSelectOpen}>\n        {themes.map(({ value, name }) => (\n          <Item key={value} onClick={() => handleThemeToggle(value)}>\n            {name}\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    color: var(--accentColor);\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\nexport const Svg = styled.svg`\n  stroke: var(--userNameColor);\n\n  &:hover {\n    stroke: var(--accentColor);\n  }\n`;","import url from '../../images/sprite.svg';\nimport { Button, Svg } from './BurgerMenu.Styled';\n\nconst BurgerMenu = ({ openSideBar }) => {\n  return (\n      <div>\n      <Button onClick={openSideBar}>\n        <Svg width={24} height={24}>\n          <use xlinkHref={`${url}#icon-menu-01`} />\n        </Svg>\n      </Button>\n    </div>\n  );\n};\n\nexport default BurgerMenu;","import { UserInfo } from \"./UserInfo/UserInfo\";\nimport { HeaderSection, UserSection } from \"./Header.Styled\";\nimport { ThemeSelect } from \"./ThemeSelect/ThemeSelect\";\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\n\nexport const Header = ({ openSideBar }) => {\n  return (\n    <HeaderSection>\n      <BurgerMenu openSideBar={openSideBar} />\n      <UserSection>\n        <ThemeSelect />\n        <UserInfo />\n      </UserSection>\n    </HeaderSection>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LogoElement = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-top: 24px;\n  margin-left: 24px;\n  margin-bottom: 60px;\n  /* border: 1px solid white; */\n  width: 109px;\n  height: 32px;\n`;\n\nexport const LogoTitle = styled.h1`\n  color: var(--contrastColor);\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 24px;\n  letter-spacing: -4%;\n  /* text-align: center; */\n`;\n\nexport const LogoSVG = styled.svg`\npath {\n  fill: var(--logo); \n}\n`\n","import { LogoElement, LogoTitle } from \"./Logo.Styled\";\nimport sprite from \"../../../images/sprite.svg\";\n\nexport const Logo = () => {\n  return (\n    <LogoElement>\n      <svg width=\"32\" height=\"32\" >\n        <use href={sprite + `#icon-icon-logo`}></use>\n      </svg>\n      <LogoTitle>Task Pro</LogoTitle>\n    </LogoElement>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const CreateBoardBtnElement = styled.div`\n  margin-left: 24px;\n  margin-right: 24px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  border-top: 1px solid var(--boarder);\n  border-bottom: 1px solid var(--boarder);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  // height: 70px; \n  font-weight: var(--fontWeight500);\n`;\n\nexport const CreateBoardBtnText = styled.p`\n  /* margin-top: 14px;\n  margin-bottom: 14px; */\n  font-size: 14px;\n`;\n\nexport const Btn = styled.button`\n  /* margin-top: 19px;\n  margin-bottom: 15px; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 36px;\n  background-color: var(--plusBg);\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"css_modal__ZUAfR\",\"title\":\"css_title__KLlfn\",\"inputText\":\"css_inputText__5JzKw\",\"iconsTitle\":\"css_iconsTitle__Ti9wF\",\"inputList\":\"css_inputList__Eqd-v\",\"realRadio\":\"css_realRadio__CKPTD\",\"backgroundList\":\"css_backgroundList__S5QN-\",\"backgroundItem\":\"css_backgroundItem__GhdkT\",\"btn\":\"css_btn__HxpYC\",\"svgOff\":\"css_svgOff__BGjfI\",\"svgOn\":\"css_svgOn__MND2q\",\"imgOn\":\"css_imgOn__KmrWR\",\"imgOff\":\"css_imgOff__x0uBd\",\"backgroundListItem\":\"css_backgroundListItem__tnicc\",\"closeBtn\":\"css_closeBtn__tgDsA\"};","import css from '../NewBoard/css.module.css'\nimport sprite from '../../../images/sprite.svg'\nimport { useState } from 'react'\nimport backimg from '../../../json/icon.json';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addDesk } from '../../../redux/desk/deskOperations';\nimport { getUserId } from '../../../redux/auth/authSelector';\n\n\nconst NewBoard = ({ close }) => {\n\n    const dispatch = useDispatch();\n    \n    const [title, setTitle] = useState('')\n    const [icons, setIcons] = useState('icon_1');\n    const [backImg, setBackImg] = useState('id-0');\n\n    const ownerUser = useSelector(getUserId);\n\n    const handleClose = () => {\n        close()\n    }\n    const onFormChange = e => {\n    const { name, value, id } = e.target;\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n      case 'icons':\n        setIcons(id);\n            break;\n      case 'backgrounds':\n        setBackImg(id);\n        break;\n      default:\n        throw new Error('There has been a mistake. Try again, please.');\n    }\n    };\n    const onFormSubmit = e => {\n        e.preventDefault();\n        const newDesk = { title: title, ownerUser:ownerUser, icon:icons, background: backImg };\n        dispatch(addDesk(newDesk));\n\n        setTitle('');\n        setIcons('');\n        setBackImg('id-0');\n        close()\n    }\n\n    \n\n    return (\n        <div className={css.modal}>\n            <svg onClick={handleClose} className={css.closeBtn} width=\"18\" height=\"18\">\n        <use  href = {sprite + '#icon-x'}></use>\n        </svg>\n            <h3 className={css.title}>New Board</h3>\n            <form onSubmit={onFormSubmit}>\n                <input onChange={onFormChange} className={css.inputText} value={title} type=\"text\" name=\"title\" id=\"title\" placeholder='Title' />\n                <h3 className={css.iconsTitle}>Icons</h3>\n                <ul className={css.inputList}>\n                    \n                    <li>\n                        <label htmlFor=\"icon_1\">\n                    <svg className={(icons==='icon_1')?css.svgOn:css.svgOff} width='18' height='18' fill=\"none\" stroke=\"var(--filterModalText)\">\n                        <use href={sprite + '#icon_1'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_1\" />\n                </label>\n                    </li>\n                    <li>\n                        <label htmlFor=\"icon_2\">\n                    <svg className={(icons==='icon_2')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\n                        <use href={sprite + '#icon_2'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_2\" />\n                </label>\n                    </li>\n                    <li>\n                        <label htmlFor=\"icon_3\">\n                    <svg className={(icons==='icon_3')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\n                        <use href={sprite + '#icon_3'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_3\" />\n                </label>\n                    </li>\n                    <li>\n                        <label htmlFor=\"icon_4\">\n                    <svg className={(icons==='icon_4')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\">\n                        <use href={sprite + '#icon_4'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_4\" />\n                </label>\n                    </li>\n                    <li>\n                        <label htmlFor=\"icon_5\">\n                    <svg className={(icons==='icon_5')?css.svgOn:css.svgOff} width='18' height='18'  stroke=\"var(--filterModalText)\">\n                        <use href={sprite + '#icon_5'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_5\" />\n                </label>\n                    </li>\n                    <li>\n                        <label htmlFor=\"icon_6\">\n                    <svg className={(icons==='icon_6')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\n                        <use href={sprite + '#icon_6'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_6\" />\n                </label>\n                    </li>\n                    <li>\n                        <label htmlFor=\"icon_7\">\n                    <svg className={(icons==='icon_7')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\n                        <use href={sprite + '#icon_7'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_7\" />\n                </label>\n                    </li>\n                    <li>\n                        <label htmlFor=\"icon_8\">\n                    <svg className={(icons==='icon_8')?css.svgOn:css.svgOff} width='18' height='18' stroke=\"var(--filterModalText)\" >\n                        <use href={sprite + '#icon_8'}></use>\n                    </svg>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name=\"icons\" id=\"icon_8\" />\n                </label>\n                    </li>\n                </ul>\n                <h3 className={css.iconsTitle}>Background</h3>\n                <ul className={css.backgroundList}>\n                    {backimg.map(({url,id})=>(<li className={css.backgroundListItem} key={id}>\n                        <label htmlFor={id}>\n                    <img className={(backImg===`${id}`)?css.imgOn:css.imgOff} src={url} alt='img' width='28'></img>\n                    <input onChange={onFormChange} className={css.realRadio} type=\"radio\" name='backgrounds' id={id} />\n                        </label>\n                    </li>))}\n                </ul>\n                <button className={css.btn}>Create</button>\n\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default NewBoard;\n\n","import { useImperativeHandle, useState, forwardRef } from \"react\";\nimport Modal from \"../Modal\"\nimport NewBoard from \"./NewBoard\";\nconst NewBoardModal = (_,ref) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n        setShowModal(true);\n    }\n\n    const closeModal = () => {\n    setShowModal(false);\n    }\n    useImperativeHandle(ref, () => ({ openModal }));\n    return (\n        <>\n            {showModal&&<Modal close={closeModal}>\n                <NewBoard close={closeModal} />\n\n                </Modal>}\n        </>\n    )\n}\nexport default forwardRef(NewBoardModal);","import {\n  CreateBoardBtnElement,\n  CreateBoardBtnText,\n  Btn,\n} from \"./CreateBoard.Styled\";\nimport NewBoardModal from \"../../Modals/NewBoard/NewBoardModal\";\nimport sprite from \"../../../images/sprite.svg\";\nimport { useRef } from \"react\";\n\nexport const CreateBoardBtn = () => {\n\n  const newBoardModalRef = useRef(null);\n  \n  const openNewBoardModal = () => {\n    if (newBoardModalRef.current) {\n      newBoardModalRef.current.openModal()\n    }\n  }\n\n  return (\n    <CreateBoardBtnElement>\n      <CreateBoardBtnText>\n        Create a <br />\n        new board\n      </CreateBoardBtnText>\n      <Btn onClick={openNewBoardModal}>\n        <svg width=\"20\" height=\"20\" stroke=\"black\">\n          <use href={sprite + `#icon-plus`}></use>\n        </svg>\n      </Btn>\n      <NewBoardModal ref={newBoardModalRef} />\n    </CreateBoardBtnElement>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const BoardsElement = styled.div`\n  /* padding-top: 24px; */\n  padding-right: 0px;\n  // padding-bottom: 40px;\n`;\n\nexport const BoardsTitle = styled.h2`\n  padding-left: 24px;\n  font-size: 12px;\n  font-weight: 400;\n  opacity: 0.5;\n  margin-bottom: 8px;\n  color: var(--myBoards);\n`;\n\nexport const BoardsList = styled.ul`\n  height: calc(100vh - 600px);\n  margin-top: 4px;\n  /* border: 1px solid var(--boarder); */\n  padding-top: 40px;\n  padding-bottom: 40px;\n  /* height: 206px; */\n  /* overflow-block: scroll; */\n  overflow-y: auto;\n  @media screen and (max-width: 1440px) {\n    height: calc(100vh - 680px);\n    /* height: 138px; */\n    padding-top: 12px;\n    padding-bottom: 12px;\n  }\n`;\n\nexport const BoardsItem = styled.li`\n  display: flex;\n  height: 61px;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--contrastColor);\n\n  padding: 20px 24px 20px 24px;\n\n  font-size: 14px;\n  font-weight: 500;\n\n  cursor: pointer;\n\n  &:focus {\n    background-color: var(--prOfBg);\n  }\n\n  &:active {\n    background-color: var(--prOfBg);\n  }\n\n  background-color: ${({ isSelected }) =>\n    isSelected ? \"var(--prOfBg)\" : \"transparent\"};\n\n  border-right: ${({ isSelected }) =>\n    isSelected ? \"4px solid var(--activeBorder)\" : \"none\"};\n`;\n\nexport const ProjectsBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ProjectSVG = styled.svg`\n  margin-right: 8px;\n`;\n\nexport const BtnsSVGBox = styled.div`\n  display: flex;\n`;\n\nexport const BtnsSVG = styled.button`\n  margin-left: 8px;\n  background-color: ${({ isSelected }) =>\n    isSelected ? \"var(--prOfBg)\" : \"transparent\"};\n  border: none;\n  padding: 0;\n  cursor: pointer;\n`;\n","import css from '../NewBoard/css.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useState } from 'react';\nimport backimg from '../../../json/icon.json';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  changeDeskNameById,\n  changeDeskIconById,\n  changeDeskBGById,\n} from '../../../redux/desk/deskOperations';\n\nimport { selectChangeDeskId, selectChangeDeskTitle } from '../../../redux/desk/deskSelectors';\n\nconst EditBoard = ({ close }) => {\n  const dispatch = useDispatch();\n\n  const deskId = useSelector(selectChangeDeskId);\n  const oldDeskTitle = useSelector(selectChangeDeskTitle);\n\n\n  const [title, setTitle] = useState('');\n  const [icons, setIcons] = useState('');\n  const [backImg, setBackImg] = useState('');\n\n  const handleClose = () => {\n    close();\n  };\n  const onFormChange = e => {\n    const { name, value, id } = e.target;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n      case 'icons':\n        setIcons(id);\n        break;\n      case 'backgrounds':\n        setBackImg(id);\n        break;\n      default:\n        throw new Error('There has been a mistake. Try again, please.');\n    }\n  };\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    if (title !== '') {\n      const newTitle = { _id: deskId, title: title };\n      dispatch(changeDeskNameById(newTitle));\n    }\n\n    if (icons !== '') {\n      const newIcon = { _id: deskId, icon: icons };\n      dispatch(changeDeskIconById(newIcon));\n    }\n\n    if (backImg !== '') {\n      const newbackImg = { _id: deskId, background: backImg };\n      dispatch(changeDeskBGById(newbackImg));\n    }\n\n    setTitle('');\n    setIcons('');\n    setBackImg('');\n    close();\n  };\n\n  return (\n    <div className={css.modal}>\n      <svg onClick={handleClose} className={css.closeBtn} width=\"18\" height=\"18\">\n        <use href={sprite + '#icon-x'}></use>\n      </svg>\n      <h3 className={css.title}>Enter a new board name:</h3>\n      <form onSubmit={onFormSubmit}>\n        <input\n          onChange={onFormChange}\n          className={css.inputText}\n          value={title}\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          placeholder={oldDeskTitle}\n        />\n        <h3 className={css.iconsTitle}>Choose an icon:</h3>\n        <ul className={css.inputList}>\n          <li>\n            <label htmlFor=\"icon_1\">\n              <svg\n                className={icons === 'icon_1' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                fill=\"none\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_1'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_1\"\n              />\n            </label>\n          </li>\n          <li>\n            <label htmlFor=\"icon_2\">\n              <svg\n                className={icons === 'icon_2' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_2'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_2\"\n              />\n            </label>\n          </li>\n          <li>\n            <label htmlFor=\"icon_3\">\n              <svg\n                className={icons === 'icon_3' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_3'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_3\"\n              />\n            </label>\n          </li>\n          <li>\n            <label htmlFor=\"icon_4\">\n              <svg\n                className={icons === 'icon_4' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_4'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_4\"\n              />\n            </label>\n          </li>\n          <li>\n            <label htmlFor=\"icon_5\">\n              <svg\n                className={icons === 'icon_5' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_5'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_5\"\n              />\n            </label>\n          </li>\n          <li>\n            <label htmlFor=\"icon_6\">\n              <svg\n                className={icons === 'icon_6' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_6'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_6\"\n              />\n            </label>\n          </li>\n          <li>\n            <label htmlFor=\"icon_7\">\n              <svg\n                className={icons === 'icon_7' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_7'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_7\"\n              />\n            </label>\n          </li>\n          <li>\n            <label htmlFor=\"icon_8\">\n              <svg\n                className={icons === 'icon_8' ? css.svgOn : css.svgOff}\n                width=\"18\"\n                height=\"18\"\n                stroke=\"var(--filterModalText)\"\n              >\n                <use href={sprite + '#icon_8'}></use>\n              </svg>\n              <input\n                onChange={onFormChange}\n                className={css.realRadio}\n                type=\"radio\"\n                name=\"icons\"\n                id=\"icon_8\"\n              />\n            </label>\n          </li>\n        </ul>\n        <h3 className={css.iconsTitle}>Choose a background:</h3>\n        <ul className={css.backgroundList}>\n          {backimg.map(({ url, id }) => (\n            <li className={css.backgroundListItem} key={id}>\n              <label htmlFor={id}>\n                <img\n                  className={backImg === `${id}` ? css.imgOn : css.imgOff}\n                  src={url}\n                  alt=\"img\"\n                  width=\"28\"\n                ></img>\n                <input\n                  onChange={onFormChange}\n                  className={css.realRadio}\n                  type=\"radio\"\n                  name=\"backgrounds\"\n                  id={id}\n                />\n              </label>\n            </li>\n          ))}\n        </ul>\n        <button className={css.btn}>Edit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditBoard;\n","import { useImperativeHandle, useState, forwardRef } from 'react';\nimport Modal from '../Modal';\n\nimport EditBoard from './EditBoard';\nconst EditBoardModal = (_id, ref) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  useImperativeHandle(ref, () => ({ openModal }));\n  return (\n    <>\n      {showModal && (\n        <Modal close={closeModal}>\n          <EditBoard close={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default forwardRef(EditBoardModal);\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeActiveDeskById,\n  deleteDesk,\n  setActiveDeskId,\n} from \"../../../redux/desk/deskOperations\";\nimport {\n  BoardsItem,\n  BtnsSVG,\n  BtnsSVGBox,\n  ProjectSVG,\n  ProjectsBox,\n} from \"./Boards.Styled\";\nimport sprite from \"../../../images/sprite.svg\";\n\nimport { useRef } from \"react\";\nimport EditBoardModal from \"../../Modals/EditDeskModal/EditBoardModal\";\n// import { useSelect } from '@mui/base';\nimport { selectActiveDeskId } from \"../../../redux/desk/deskSelectors\";\n\nexport const DesksListItem = ({ _id, icon, title, background }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteDesk = (deskId) => {\n    dispatch(deleteDesk(deskId));\n  };\n\n  const handleClickActiveDeskId = (deskId) => {\n    dispatch(setActiveDeskId(deskId));\n  };\n\n  const handleClickChangeDeskById = (_id, title, icon, background) => {\n    dispatch(changeActiveDeskById({ _id, title, icon, background }));\n  };\n\n  const EditBoardModalRef = useRef(null);\n\n  const openEditBoardModal = () => {\n    if (EditBoardModalRef.current) {\n      EditBoardModalRef.current.openModal();\n    }\n  };\n\n  const activeDeskId = useSelector(selectActiveDeskId);\n\n  return (\n    <BoardsItem\n      isSelected={activeDeskId === _id}\n      key={_id}\n      onClick={() => handleClickActiveDeskId(_id)}\n    >\n      <ProjectsBox>\n        <ProjectSVG width=\"18\" height=\"18\" stroke=\"var(--contrastColor)\">\n          <use href={sprite + `#${icon}`}></use>\n        </ProjectSVG>\n        <span>{title}</span>\n      </ProjectsBox>\n      <BtnsSVGBox>\n        <BtnsSVG isSelected={activeDeskId === _id}>\n          <svg\n            onClick={() => {\n              handleClickChangeDeskById(_id, title, icon, background);\n\n              openEditBoardModal();\n            }}\n            width=\"16\"\n            height=\"16\"\n            stroke=\"var(--myBoards)\"\n            fill=\"var(--sidebarColor)\"\n          >\n            <use href={sprite + `#icon-Icon-pencil`}></use>\n          </svg>\n        </BtnsSVG>\n        <BtnsSVG>\n          <svg\n            onClick={() => handleDeleteDesk(_id)}\n            width=\"16\"\n            height=\"16\"\n            fill=\"var(--sidebarColor)\"\n            stroke=\"var(--myBoards)\"\n          >\n            <use href={sprite + `#icon-trash-04`}></use>\n          </svg>\n        </BtnsSVG>\n      </BtnsSVGBox>\n      <EditBoardModal ref={EditBoardModalRef} />\n    </BoardsItem>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectDesks, selectVisibleDesks } from \"../../../redux/desk/deskSelectors\";\nimport { selectBackImg } from \"../../../redux/filter/filterSelectors\";\nimport { useEffect } from \"react\";\nimport { fetchDesks } from \"../../../redux/desk/deskOperations\";\nimport { DesksListItem } from \"./BoardListItem\";\nimport { BoardsList } from \"./Boards.Styled\";\n\nconst DesksList = () => {\n    const dispatch = useDispatch();\n    const visibleDesks = useSelector(selectVisibleDesks);\n    const desks = useSelector(selectDesks);\n    const filterValue = useSelector(selectBackImg);\n  \n\n    useEffect(() => {\n        dispatch(fetchDesks())\n    }, [dispatch]);\n  \n  \n\n    return (\n        <BoardsList>\n            {visibleDesks.length > 0 ? (\n        visibleDesks.map(desk => (\n          <DesksListItem key={desk._id} {...desk}/>\n        ))\n      ) : filterValue && desks ? (\n        <div></div>\n      ) : (\n        <div></div>\n      )}\n        </BoardsList>\n    )\n\n\n\n\n\n}\n\nexport default DesksList;","import { CreateBoardBtn } from \"../CreateBoard/CreateBoard\";\nimport {\n  BoardsElement,\n  BoardsTitle,\n  // BoardsList,\n  // BoardsItem,\n  // ProjectsBox,\n  // ProjectSVG,\n  // BtnsSVGBox,\n  // BtnsSVG,\n} from \"./Boards.Styled\";\n// import sprite from \"../../../images/sprite.svg\";\nimport BoardsList from \"./BoardList\";\n\nexport const Boards = () => {\n  return (\n    <BoardsElement>\n      <BoardsTitle>My boards</BoardsTitle>\n      <CreateBoardBtn />\n      <BoardsList/>\n      {/* <BoardsList>\n        <BoardsItem>\n          <ProjectsBox>\n            <ProjectSVG\n              width=\"18\"\n              height=\"18\"\n              fill=\"var(--prOfBg)\"\n              stroke=\"var(--contrastColor)\"\n            >\n              <use href={sprite + `#icon-Project`}></use>\n            </ProjectSVG>\n            <span>Project office</span>\n          </ProjectsBox>\n\n          <BtnsSVGBox>\n            <BtnsSVG>\n              <svg\n                width=\"16\"\n                height=\"16\"\n                fill=\"var(--prOfBg)\"\n                stroke=\"var(--myBoards)\"\n              >\n                <use href={sprite + `#icon-Icon-pencil`}></use>\n              </svg>\n            </BtnsSVG>\n            <BtnsSVG>\n              <svg\n                width=\"16\"\n                height=\"16\"\n                fill=\"var(--prOfBg)\"\n                stroke=\"var(--myBoards)\"\n              >\n                <use href={sprite + `#icon-trash-04`}></use>\n              </svg>\n            </BtnsSVG>\n          </BtnsSVGBox>\n        </BoardsItem>\n        <BoardsItem>Neon Light Project</BoardsItem>\n      </BoardsList> */}\n    </BoardsElement>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const HelpElement = styled.div`\n  /* border: 1px solid white; */\n  margin-left: 24px;\n  margin-right: 24px;\n  padding: 20px;\n  background-color: var(--needHelpBg);\n  border-radius: 8px;\n`;\nexport const IMG = styled.img`\n  margin-bottom: 14px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n`;\n\nexport const TextSpan = styled.span`\n  color: var(--accentColor);\n`;\n\nexport const HelpBtn = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  margin-top: 18px;\n  font-size: 12px;\n  background-color: transparent;\n  border: none;\n  cursor:pointer;\n`;\n\nexport const HelpText = styled.p`\n  font-family: Poppins;\n  margin-left: 8px;\n  font-size: 12px;\n  color: var(--contrastColor);\n  font-weight: var(--fontWeight500);\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const SectionTitle = styled.h2`\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n  color: var(--filterModalTitle);\n  \n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  \n  align-items: start;\n  margin-bottom: 24px;\n\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  align-items: start;\n  border-radius: 8px;\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 14px;\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n\n  color: #161616;\n  background-color: #BEDBB0;\n\n  \n  cursor: pointer;\n\n  \n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n  color: var(--filterModalTitle);\n  background-color: var(--backgroundInput);\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  outline: none;\n\n \n\n  &::placeholder {\n    color: var(--filterModalText);\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n    \n\n  }\n`;\n\nexport const Textarea = styled(Field)`\n  resize: vertical;\n  width: 100%;\n  height: 120px;\n  padding: 14px 18px;\n  color: var(--filterModalTitle);\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  \n  background-color: var(--backgroundInput);\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  outline: none;\n  border-radius: 8px;\n\n  \n\n  margin-top: 14px;\n\n  &::placeholder {\n    color: var(--filterModalText);\n    font-size: 14px;\n    font-family: 'Poppins';\n    font-weight: 400;\n    line-height: normal;\n    letter-spacing: -0.28px;\n    \n  }\n`;\n\n\n\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #fff;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  \n`;\nexport const ModalField = styled.div`\n  padding: 24px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 8px;\n  width: 400px;\n  height: 355px;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  background-color: var(--themeBgColor);\n  margin-left: auto;\n  margin-right: auto;\n\n  \n`;\n\nexport const CloseModal = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  \n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  `\n\n\n  \n\n","import React from \"react\";\nimport {\n  FormWrapper,\n  Section,\n  SubmitButton,\n  TitleInput,\n  SectionTitle,\n  Textarea,\n  ModalForm,\n  ErrorSection,\n  ModalField,\n  CloseModal,\n} from \"../NeedHelp/NeedHelp.Styled\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport sprite from \"../../../images/sprite.svg\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  comment: Yup.string().min(7).max(230).required(\"Comment is required\"),\n});\nconst initialValues = {\n  email: \"\",\n  comment: \"\",\n};\n\nconst NeedHelp = ({ close }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    close();\n  };\n  const handleClose = () => {\n    close();\n  };\n\n  return (\n    <ModalField>\n      <CloseModal onClick={handleClose}>\n        <use\n          href={sprite + \"#icon-x\"}\n          width={18}\n          height={18}\n          stroke=\"var(--addBtnText)\"\n        />\n      </CloseModal>\n      <Section>\n        <SectionTitle>Need help</SectionTitle>\n\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <ModalForm>\n            <FormWrapper>\n              <ErrorSection name=\"email\" />\n              <TitleInput\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email address \"\n              />\n              <ErrorSection name=\"comment\" />\n              <Textarea type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n            </FormWrapper>\n            <SubmitButton type=\"submit\">Send</SubmitButton>\n          </ModalForm>\n        </Formik>\n      </Section>\n    </ModalField>\n  );\n};\n\nexport default NeedHelp;\n","import { useImperativeHandle, useState, forwardRef } from \"react\";\nimport Modal from \"../Modal\"\nimport NeedHelp from \"./NeedHelp\";\n\n\nconst HelpModal = (_,ref) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n        setShowModal(true);\n    }\n\n    const closeModal = () => {\n    setShowModal(false);\n    }\n    useImperativeHandle(ref, () => ({ openModal }));\n    return (\n        <>\n            {showModal&&<Modal close={closeModal}>\n            <NeedHelp close={closeModal}/>\n                </Modal>}\n        </>\n    )\n}\nexport default forwardRef(HelpModal);\n\n","import {\n  HelpElement,\n  IMG,\n  Text,\n  TextSpan,\n  HelpBtn,\n  HelpText,\n} from \"./CustomerSupport.Styled\";\nimport img from \"../../../images/flowerpot.png\";\nimport sprite from \"../../../images/sprite.svg\";\nimport HelpModal from \"../../Modals/NeedHelp/NeedHelpModal\";\nimport { useRef } from \"react\";\n\nexport const CustomerSupport = () => {\n  const helpModalRef = useRef(null);\n\n  const openHelpModal = () => {\n    if (helpModalRef.current) {\n      helpModalRef.current.openModal()\n    }\n  }\n  return (\n    <HelpElement>\n      <IMG src={img} alt=\"flowerpot\" height=\"78\" width=\"54\" />\n      <Text>\n        If you need help with <TextSpan>TaskPro</TextSpan>, check out our\n        support resources or reach out to our customer support team.\n      </Text>\n      <HelpBtn onClick={openHelpModal}>\n        <svg width=\"20\" height=\"20\" stroke=\"var(--contrastColor)\" fill=\"none\">\n          <use href={sprite + `#icon-help-circle`}></use>\n        </svg>\n        <HelpText>Need Help?</HelpText>\n      </HelpBtn>\n      <HelpModal ref={helpModalRef} />\n    </HelpElement>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LogoutElement = styled.div`\n  display: flex;\n  align-items: center;\n  /* font-family: Poppins; */\n  padding-left: 24px;\n  padding-top: 24px;\n  padding-bottom: 24px;\n  cursor: pointer;\n`;\n\nexport const LogoutBtn = styled.button`\n  padding: 0;\n  font-family: Poppins;\n  background-color: var(--sidebarColor);\n  color: var(--logOut);\n  border: none;\n  font-size: 16px;\n  margin-left: 14px;\n  font-weight: 500;\n  cursor: pointer;\n`;\n","import { LogoutElement, LogoutBtn } from \"./LogOut.Styled\";\nimport sprite from \"../../../images/sprite.svg\";\nimport Notiflix from \"notiflix\";\nimport { logOut } from \"../../../redux/auth/authOperation\";\nimport { useDispatch } from \"react-redux\";\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n\n  const handleClickLogOut = () => {\n    Notiflix.Confirm.init({\n      width: \"300px\",\n      position: \"center-top\",\n      fontFamily: \"Poppins\",\n      titleColor: \"#bedbb0\",\n      okButtonBackground: \"#bedbb0\",\n    });\n    Notiflix.Confirm.show(\n      \"Confirmation\",\n      \"Are you sure you want to log out?\",\n      \"Yes\",\n      \"No\",\n      () => {\n        dispatch(logOut());\n      },\n      () => {}\n    );\n  };\n  return (\n    <LogoutElement onClick={handleClickLogOut}>\n      <svg width=\"32\" height=\"32\">\n        <use href={sprite + `#icon-login`}></use>\n      </svg>\n      <LogoutBtn type=\"button\">\n        Log out\n      </LogoutBtn>\n    </LogoutElement>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* max-height: 100%; */\n  background-color: var(--sidebarColor);\n  color: var(--contrastColor);\n  min-width: 260px;\n  width: 260px;\n\n  @media screen and (max-width: 375px) {\n    min-width: 225px;\n    width: 225px;\n  }\n  @media screen and (max-width: 1440px) {\n    height: calc(100vh - 68px);\n    /* height: 702px; */\n    width: 260px;\n    overflow: auto;\n    position: fixed;\n    /* left: -260px; */\n    top: 68px;\n    z-index: 1000;\n    /* min-height: 100%; */\n  }\n`;\n","import { Logo } from \"./Logo/Logo\";\nimport { Boards } from \"./Boards/Boards\";\nimport { CustomerSupport } from \"./CustomerSupport/CustomerSupport\";\nimport { LogOut } from \"./LogOut/LogOut\";\nimport { Section } from \"./SideBar.Styled\";\n\nexport const Sidebar = () => {\n  return (\n    <Section>\n      <div>\n        <Logo />\n        <Boards />\n      </div>\n      <div>\n        <CustomerSupport />\n        <LogOut />\n      </div>\n    </Section>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Section = styled.div`\n  font-family: Poppins;\n  display: flex;\n\n  max-width: 100%;\n  /* padding: 0; */\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  /* @media screen and (min-width: 375px) {\n    max-width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1440px;\n    padding: 0;\n  } */\n`;\n\nexport const Main = styled.div`\n  flex-grow: 1;\n`;\n","import { useEffect, useState } from \"react\";\nimport { Header } from \"../../components/Header/Header\";\nimport { Sidebar } from \"../../components/Sidebar/Sidebar\";\nimport { ScreensPage } from \"../ScreensPage/ScreensPage\";\nimport { Section, Main } from \"./HomePage.Styled\";\n\nconst HomePage = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  return (\n    <Section>\n      {isSidebarOpen && windowWidth <= 1439 && <Sidebar />}\n      {windowWidth >= 1440 && <Sidebar />}\n      <Main>\n        <Header openSideBar={toggleSidebar} />\n        <ScreensPage />\n      </Main>\n    </Section>\n  );\n};\n\nexport default HomePage;\n"],"names":["UserInfoBox","styled","span","_templateObject","_taggedTemplateLiteral","div","_templateObject2","UserName","p","_templateObject3","UserAvatarBox","_templateObject4","UserAvatar","img","_templateObject5","EditProfileForm","form","EditProfileTitle","h2","EditProfileImg","EditProfileSvg","svg","FileWrapper","Foto","input","_templateObject6","EditFoto","_templateObject7","EditCloseBtn","button","_templateObject8","EditProfileInput","_templateObject9","PasswordWrapper","_templateObject10","ToggleShowPasword","_templateObject11","BtnEditProfile","_templateObject12","_ref","modalClose","userAvatar","useSelector","getAvatar","userName","getName","userEmail","getUserEmail","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","handleAvatarChange","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","wrap","_context","prev","next","FormData","append","target","files","updateAvatar","stop","_x","apply","arguments","handleSubmit","_ref3","_callee2","_yield$axios$patch","data","_context2","preventDefault","name","value","trim","updateName","Notify","success","t0","console","log","email","updateEmail","t1","password","axios","patch","sent","message","t2","_x2","_jsxs","onSubmit","encType","children","_jsx","type","onClick","width","height","stroke","href","sprite","src","alt","accept","onChange","placeholder","minLength","maxLength","prevShowPassword","BsEyeSlash","color","style","BsEye","UserInfo","isModalOpen","setIsModalOpen","modalOpen","_Fragment","EditProfile","UserSection","HeaderSection","header","Container","Title","Wrapper","List","ul","props","isOpen","Item","li","themes","ThemeSelect","isSelectOpen","setIsSelectOpen","_useState3","_useState4","selectedTheme","setSelectedTheme","localTheme","selectGetTheme","useEffect","document","body","classList","remove","add","IoIosArrowDown","size","map","theme","setTheme","updateTheme","setTimeout","Button","Svg","openSideBar","xlinkHref","concat","url","Header","BurgerMenu","LogoElement","LogoTitle","h1","Logo","CreateBoardBtnElement","CreateBoardBtnText","Btn","close","title","setTitle","icons","setIcons","_useState5","_useState6","backImg","setBackImg","ownerUser","getUserId","onFormChange","_e$target","id","Error","className","css","newDesk","icon","background","addDesk","htmlFor","fill","backimg","NewBoardModal","_","ref","showModal","setShowModal","openModal","closeModal","useImperativeHandle","Modal","NewBoard","forwardRef","CreateBoardBtn","newBoardModalRef","useRef","current","BoardsElement","BoardsTitle","BoardsList","BoardsItem","isSelected","ProjectsBox","ProjectSVG","BtnsSVGBox","BtnsSVG","deskId","selectChangeDeskId","oldDeskTitle","selectChangeDeskTitle","newTitle","_id","changeDeskNameById","newIcon","changeDeskIconById","newbackImg","changeDeskBGById","EditBoardModal","EditBoard","DesksListItem","EditBoardModalRef","activeDeskId","selectActiveDeskId","setActiveDeskId","changeActiveDeskById","handleClickChangeDeskById","deleteDesk","visibleDesks","selectVisibleDesks","selectDesks","selectBackImg","fetchDesks","length","desk","_objectSpread","Boards","HelpElement","IMG","Text","TextSpan","HelpBtn","HelpText","SectionTitle","FormWrapper","Section","SubmitButton","TitleInput","Field","Textarea","ErrorSection","ErrorMessage","ModalForm","Form","ModalField","CloseModal","validationSchema","Yup","shape","required","comment","min","max","initialValues","Formik","values","resetForm","HelpModal","NeedHelp","CustomerSupport","helpModalRef","LogoutElement","LogoutBtn","LogOut","Notiflix","init","position","fontFamily","titleColor","okButtonBackground","show","logOut","section","Sidebar","Main","window","innerWidth","windowWidth","setWindowWidth","isSidebarOpen","setIsSidebarOpen","handleResize","addEventListener","removeEventListener","ScreensPage"],"sourceRoot":""}